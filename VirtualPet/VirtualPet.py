############################################################################
#                _      _               _     ___     _   
#         __   _(_)_ __| |_ _   _  __ _| |   / _ \___| |_ 
#         \ \ / / | '__| __| | | |/ _` | |  / /_)/ _ \ __|
#          \ V /| | |  | |_| |_| | (_| | | / ___/  __/ |_ 
#           \_/ |_|_|   \__|\__,_|\__,_|_| \/    \___|\__|
#   ˚☽                                     
#            ☆                          ☆                 ☆            ☆
#               Virtual Star comes from a galaxy far, far away...                  
############################################################################


#                              Written by Sarah Bass
#                Check out my other games for Android, Fitbit, and more
#                           https://github.com/SarahBass



################
#####IMPORTS####
################
import time
import thumby
import math
import random
import machine
import gc
from random import randrange
##############################################

#Global Variables-------------------------#                             
userInput=11                              # 
num = 0                                   #
randy1=[3, 6, 10, 60, 25, 100, 120, 333,   #
    444, 605, 999 ,                       #
    17,18,19,21,28,35,36,                 #
    37,42,63,73,74,84,85,                 #
    94,101,111,119,126,131,               #    
    185,202,303,404,409]                  #
randnum = randy1[num]                      #    
randy2=[4, 7, 10, 8, 32, 38, 44, 64,      #
    77, 86, 100, 111, 120,                #
    17,18,19,21,28,35,36,                 #
    37,42,63,73,74,84,85,                 #
    94,101,111,119,126,131,               #    
    185,102,103,104,109]                  #
randnumber = randy2[num]                  #    
randy3=[5,6,7,9,11,12,14,15,              #
    17,18,19,21,28,35,36,                 #
    37,42,63,73,74,84,85,                 #
    94,101,111,119,126,131,               #    
    185,202,303,404,409]                  #
palindromenum= randy3[num]                #    
data= False                               #
abutton = 0                               #
pageNumber=0                              #
game = 0                                  #
#-----------------------------------------#
#COLLECT TRASH COMMAND USED OFTEN TO MANAGE MEMORY
gc.enable() 
gc.collect()     
gc.threshold(gc.mem_free() // 4 + gc.mem_alloc())    

###########################################################################################
################### SPRITE ARRAY ANIMATIONS################################################
###########################################################################################
introFrames = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,128,128,0,0,0,0,0,0,0,128,148,22,146,138,206,32,168,6,128,0,136,0,0,32,0,68,16,56,16,68,0,0,136,0,160,0,168,16,32,0,42,16,42,0,40,16,168,0,40,16,168,0,200,32,32,64,64,36,32,192,0,144,64,0,32,64,0,132,32,0,144,64,144,32,64,68,0,0,0,0,0,1,2,64,107,243,107,32,11,17,10,0,186,57,184,0,170,17,170,0,186,57,186,0,42,1,2,0,224,224,224,8,20,212,136,128,136,212,20,104,96,0,0,0,0,1,2,4,164,18,161,0,0,8,144,0,128,4,136,1,2,4,21,18,19,1,8,67,0,0,0,0,0,0,0,0,0,132,192,224,193,0,0,128,0,25,60,28,10,0,10,0,10,17,10,0,24,16,32,0,32,0,160,0,160,0,161,1,129,0,128,0,128,0,160,0,160,16,168,0,186,57,186,0,170,17,170,0,186,57,186,0,170,17,170,0,170,144,168,0,160,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,2,1,2,0,10,1,10,0,2,1,2,0,2,1,10,0,10,1,2,0,0,0,0,0,2,1,2,0,11,19,11,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,22,178,154,238,32,168,128,176,0,168,20,168,0,160,68,176,56,16,68,128,16,170,144,168,0,168,0,160,0,160,0,160,0,160,16,160,0,160,16,160,0,192,224,224,192,192,228,224,192,0,144,0,0,0,0,4,0,32,128,80,176,160,32,192,0,0,0,0,0,0,0,0,0,34,49,122,48,19,131,3,0,6,1,10,128,58,57,186,0,170,16,170,0,43,19,11,0,2,129,130,32,80,80,32,0,32,81,80,32,128,129,2,0,0,1,3,7,167,3,161,0,160,16,160,1,130,0,144,38,4,1,4,18,17,8,0,128,0,0,0,0,0,0,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,10,17,170,0,168,16,160,0,128,1,129,0,129,7,6,6,6,3,129,0,129,1,0,0,128,0,160,64,168,17,170,0,186,57,186,0,170,17,170,0,170,144,168,0,168,16,168,0,160,0,0,0,0,0,0,0,2,3,7,3,0,0,0,0,0,16,0,16,16,16,16,16,0,40,16,40,0,1,0,0,2,1,2,0,10,1,10,0,10,17,10,0,10,17,42,0,10,1,10,1,42,17,10,0,2,1,10,0,2,1,2,0,43,19,43,0,42,17,42,0,58,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,147,139,238,32,168,4,184,0,128,136,128,16,0,68,16,56,144,64,128,0,136,144,168,0,168,16,168,0,168,16,160,0,160,16,160,0,160,0,128,64,64,128,128,64,64,128,16,0,0,128,64,0,32,128,40,16,192,80,208,200,0,32,132,0,0,0,0,0,0,0,2,0,42,49,122,48,18,129,2,0,11,3,43,128,186,57,186,0,170,17,170,0,43,19,11,0,10,1,2,0,130,129,2,0,2,129,130,0,2,0,1,2,4,8,136,4,130,1,128,0,128,8,144,0,132,0,38,36,36,5,5,9,12,6,128,0,16,0,0,0,0,0,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,42,17,170,0,136,0,0,0,28,28,28,1,2,10,17,16,17,10,2,1,12,12,0,0,128,0,162,0,186,57,186,0,170,17,170,0,186,57,186,0,168,16,168,0,170,17,170,0,42,0,0,0,0,0,0,0,2,3,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,2,1,10,0,10,16,8,0,8,16,8,0,10,0,2,0,2,1,2,0,18,1,18,16,16,16,16,0,40,17,40,0,2,1,2,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,146,139,238,32,40,4,184,0,0,8,128,0,0,68,16,56,16,68,128,0,136,0,160,0,160,16,168,0,168,16,168,0,168,16,168,0,168,16,128,64,64,128,128,64,64,128,16,0,0,128,68,0,32,64,8,128,32,0,144,64,144,32,68,64,0,0,0,0,0,0,0,0,42,49,122,48,18,145,170,0,186,56,58,0,170,16,168,0,184,57,186,0,10,1,2,0,2,1,0,64,160,161,64,0,64,160,160,64,0,0,1,2,4,8,40,4,162,17,160,8,184,56,184,0,128,4,8,1,2,4,149,18,147,1,8,67,0,0,0,0,0,0,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,149,168,0,170,145,170,0,128,0,0,0,0,1,1,0,0,2,4,4,4,2,0,0,1,1,0,0,128,0,160,0,186,57,186,0,170,17,42,0,42,16,42,0,42,17,10,0,58,57,186,0,168,0,0,0,0,0,0,0,2,3,7,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,11,0,10,17,10,0,10,17,10,0,10,17,10,0,10,17,10,0,10,1,10,0,10,17,10,0,10,1,2,0,0,0,0,0,0,16,0,16,16,16,16,16,0,41,18,40,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,144,128,192,0,128,0,128,0,0,8,64,0,0,68,16,56,16,68,0,0,8,0,0,0,128,16,168,0,168,16,160,0,160,0,160,0,160,0,128,64,64,128,128,64,64,128,16,0,0,128,68,0,32,128,40,16,192,80,208,200,0,32,132,0,0,0,0,0,0,0,0,0,32,49,122,48,18,129,2,0,58,57,58,128,168,0,168,0,184,56,184,0,42,1,2,0,2,129,128,32,80,81,32,0,32,81,80,32,130,128,1,2,4,8,168,4,130,1,128,0,128,136,144,0,132,0,38,36,36,5,5,9,12,6,128,0,144,0,0,0,0,0,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,10,17,170,0,168,0,128,0,0,1,1,0,0,1,2,2,2,1,0,0,129,1,128,0,128,16,234,224,234,17,170,0,171,19,171,0,170,17,170,0,168,144,168,0,170,17,170,0,2,0,0,0,0,0,0,0,2,3,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,10,0,10,1,10,0,10,17,10,0,10,1,10,0,10,1,10,0,2,1,10,0,10,1,10,0,8,1,0,0,0,1,0,0,3,3,3,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,176,152,232,32,168,0,176,0,160,0,32,128,128,128,16,56,16,68,128,16,160,0,160,0,128,0,160,0,32,16,32,0,32,16,160,0,160,0,128,64,64,128,128,64,64,132,0,0,0,144,0,0,0,0,4,0,32,128,80,176,160,32,192,0,0,0,0,0,0,0,0,0,34,49,122,48,18,129,2,0,6,1,8,131,43,3,168,0,186,57,186,0,10,1,2,0,0,64,64,16,32,32,144,0,144,32,32,16,64,64,1,2,4,8,136,4,162,1,160,0,128,8,128,1,130,0,144,38,4,1,4,18,17,8,0,128,0,0,0,0,0,0,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,42,17,170,0,170,16,168,0,160,0,160,0,128,0,129,1,129,0,160,0,160,0,160,0,160,16,170,64,250,57,186,0,170,17,170,0,42,17,170,0,170,144,168,0,168,16,168,0,160,0,0,0,0,0,0,0,2,3,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,2,17,42,0,42,17,42,0,42,17,42,0,10,17,42,0,42,17,8,1,10,17,10,0,10,1,2,0,0,0,0,0,3,3,3,0,2,1,2,0,0,0,0,0])
# 72x40 for 8 frames
supernovaFrames = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,0,32,32,64,32,16,8,4,130,1,0,1,130,4,8,16,96,0,128,64,0,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,16,160,64,1,1,0,0,0,2,4,2,0,0,0,1,1,0,64,160,16,8,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,65,64,0,64,32,1,35,18,14,2,0,12,16,0,32,32,0,64,0,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,0,0,0,136,0,0,0,184,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,64,32,64,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,0,0,0,139,0,0,0,136,0,0,0,0,0,0,0,0,0,0,0,232,0,8,8,16,72,68,2,1,32,128,0,128,32,1,2,68,88,0,32,16,0,16,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,0,0,0,139,0,0,0,139,0,0,0,0,0,0,0,0,0,0,0,0,128,68,40,16,0,0,64,192,128,128,129,0,0,0,0,0,0,0,16,40,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,10,16,0,16,0,8,0,8,4,3,0,0,3,4,0,8,8,0,16,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,0,0,0,136,0,0,0,128,0,0,0,136,0,0,0,152,0,0,0,0,0,0,0,0,0,0,128,64,32,16,8,16,32,64,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,0,0,0,136,0,0,0,139,0,0,0,136,0,0,0,139,0,0,0,90,128,2,2,4,18,17,0,0,8,32,64,32,8,0,0,17,22,0,8,4,0,132,84,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,0,0,0,139,0,0,0,136,0,0,0,136,0,0,0,139,0,0,0,0,160,17,10,4,0,0,16,48,32,224,32,0,192,0,0,0,0,0,4,10,209,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,27,0,0,0,0,2,4,0,4,0,2,0,2,1,0,0,0,0,1,0,2,2,0,4,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,0,0,0,152,0,0,0,136,0,0,0,136,0,0,0,136,0,0,0,136,0,0,0,184,0,128,64,40,16,8,4,8,16,32,64,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,0,0,0,136,0,0,0,184,0,0,0,136,0,0,0,136,0,0,0,173,64,129,1,2,9,8,0,0,4,16,32,16,4,0,0,8,11,0,4,2,128,66,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0,0,136,0,0,0,184,0,0,0,136,0,0,0,139,0,0,0,8,80,8,5,2,0,0,8,24,144,112,16,0,96,128,0,0,0,0,2,5,232,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,11,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,1,2,0,10,0,1,0,9,0,0,0,0,0,0,0,1,1,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,0,0,0,184,0,0,0,136,0,0,0,136,0,0,0,136,0,0,0,136,0,0,0,136,0,0,0,136,128,64,32,64,128,0,0,136,0,0,0,136,0,0,0,136,0,0,0,136,0,0,0,184,0,0,0,136,0,0,0,152,0,0,0,136,0,0,0,0,0,0,0,184,0,0,0,136,0,0,0,184,0,0,0,136,0,0,0,136,0,0,0,232,0,8,8,16,72,68,2,1,32,128,0,128,32,1,2,68,88,0,32,16,0,16,80,136,0,0,0,184,0,0,0,136,0,0,0,136,0,0,0,184,0,0,0,136,0,0,0,0,0,0,0,136,0,0,0,136,0,0,0,136,0,0,0,184,0,0,0,136,0,0,0,137,130,68,40,16,0,0,64,192,128,128,129,0,0,0,0,0,0,0,16,40,68,1,0,136,0,0,0,136,0,0,0,136,0,0,0,184,0,0,0,136,0,0,0,136,0,0,0,0,0,0,0,8,0,0,0,11,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,10,16,0,16,0,8,0,8,4,3,0,8,3,4,0,8,8,0,16,0,23,0,0,8,0,0,0,11,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,137,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,21,8,5,2,21,8,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,2,1,0,1,6,17,16,0,0,8,32,64,32,8,0,0,16,17,0,5,2,1,130,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,21,8,4,0,0,0,16,48,96,128,128,0,0,0,0,0,0,0,4,2,21,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,84,136,84,32,84,136,84,34,85,136,85,35,85,136,84,34,84,136,84,32,84,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,21,8,5,2,5,136,85,34,85,136,85,34,85,8,21,34,21,8,21,2,21,8,21,2,21,8,21,2,21,8,21,34,85,8,85,34,85,136,85,34,85,137,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,2,1,0,0,32,80,136,85,34,21,8,5,2,1,0,0,0,0,0,0,0,4,0,4,0,4,8,4,2,20,8,20,32,20,8,80,32,80,136,80,32,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,0,0,0,0,2,5,0,0,0,0,0,0,0,16,16,0,0,8,32,64,32,8,0,0,16,16,0,0,0,0,0,0,0,80,128,64,0,1,0,5,2,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,65,0,0,128,5,2,21,8,21,34,21,8,16,32,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,85,34,84,128,0,0,0,128,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,84,136,84,32,84,136,16,0,0,8,16,0,20,8,20,0,20,8,4,0,4,0,0,0,64,128,80,32,80,128,80,32,84,128,0,0,0,128,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,136,85,34,85,8,5,2,1,128,64,32,80,136,85,34,85,136,85,34,21,8,5,2,5,128,1,0,64,128,80,32,80,8,21,34,21,8,21,2,21,8,21,2,21,8,21,2,21,8,21,34,85,8,84,32,80,128,80,32,65,129,1,2,5,8,21,34,85,136,85,34,85,136,85,2,0,0,0,0,84,136,85,34,85,136,85,2,1,0,0,32,80,136,84,34,21,8,5,2,1,0,0,0,0,0,0,0,4,0,4,0,4,8,4,2,20,8,20,32,20,8,80,32,64,128,64,0,1,0,5,2,21,8,85,34,84,136,80,32,64,128,85,34,85,136,85,0,0,0,0,34,85,136,85,34,85,136,85,0,0,0,0,2,5,0,0,0,0,0,0,0,16,16,0,0,8,32,64,32,8,0,0,16,16,0,0,0,0,0,0,0,80,128,64,0,1,0,5,2,85,136,84,32,80,128,64,0,1,0,5,2,85,136,21,34,85,8,85,34,80,128,64,0,0,128,5,2,21,8,21,34,21,8,16,32,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,85,34,84,128,0,0,0,0,21,34,85,136,85,34,84,136,64,0,0,0,84,32,80,128,64,0,65,128,5,2,5,8,5,2,4,8,4,0,20,8,16,0,0,8,16,0,20,8,20,0,20,8,4,0,4,0,0,0,64,128,80,32,80,0,16,0,0,0,0,0,0,128,85,34,85,8,0,0,0,128,84,34,85,136,85,34,85,136,85,34,84,136])
# 72x40 for 8 frames
galaxyFrames = bytearray([170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,93,42,23,10,13,10,7,10,29,10,23,10,13,10,7,10,13,10,71,10,29,10,55,42,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,3,0,0,0,0,0,0,16,16,0,0,8,32,64,32,8,0,0,16,16,0,0,64,224,64,0,1,10,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,168,208,160,64,132,192,128,64,128,192,128,64,160,192,128,64,128,192,128,96,160,208,160,112,168,220,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,42,29,42,55,42,29,10,7,2,5,2,7,2,5,2,7,10,13,10,7,10,29,42,55,42,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,130,1,0,0,0,0,0,0,4,4,0,0,2,8,16,8,2,0,0,4,4,0,0,0,2,64,240,65,0,3,2,13,10,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,118,168,192,128,64,128,129,128,0,128,192,128,64,128,0,0,0,0,0,0,2,0,128,160,96,131,128,128,64,160,192,160,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,118,170,220,170,118,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,42,29,42,23,10,29,10,7,10,133,2,7,2,5,2,7,10,29,10,7,10,29,10,23,10,29,10,23,42,29,42,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,42,29,2,0,0,0,66,224,64,0,0,0,0,0,64,64,0,0,32,128,0,128,32,0,0,64,64,0,0,0,0,64,0,128,0,128,2,5,2,7,2,5,10,23,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,168,216,160,112,160,208,128,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,0,0,0,0,2,15,2,0,0,0,160,112,160,208,168,118,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,220,170,118,170,220,170,116,168,208,160,112,160,216,168,116,168,216,168,112,168,208,160,112,160,208,168,116,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,42,119,42,29,42,55,42,29,10,23,10,13,10,135,10,13,10,7,10,13,10,7,10,29,42,119,42,93,42,119,42,29,42,55,62,95,42,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,119,170,221,170,23,10,5,2,1,224,240,240,112,112,32,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,1,32,1,136,225,58,233,168,33,194,71,194,141,170,119,170,221,170,119,170,221,170,119,170,221,170,64,128,0,0,0,48,56,24,24,0,0,0,0,0,0,0,0,0,0,66,224,64,0,0,0,0,0,32,32,0,0,16,64,128,64,16,0,0,32,32,0,0,0,0,64,0,224,2,128,8,31,50,7,140,9,107,107,168,39,33,48,152,9,42,3,138,221,170,119,170,221,170,119,170,220,168,112,160,192,0,6,6,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,31,2,2,0,0,0,0,0,0,0,32,248,32,0,0,0,0,10,0,0,128,170,119,170,221,170,119,170,221,170,119,170,221,170,118,168,216,168,112,160,208,160,64,129,128,128,0,128,192,160,112,160,192,128,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,192,160,96,128,192,128,0,128,192,128,96,160,208,168,116,170,221,170,119,170,221,42,55,10,13,10,7,2,5,2,65,0,1,0,1,0,1,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,156,0,34,0,184,152,224,96,168,0,34,129,136,1,32,1,136,1,34,3,130,13,42,119,170,221,170,119,2,0,0,0,0,0,0,0,0,128,128,128,128,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,8,0,34,0,136,3,112,28,6,226,57,233,40,32,198,77,201,153,51,102,204,24,96,195,130,5,42,119,0,64,0,0,0,0,0,0,135,199,199,195,3,1,0,0,0,0,0,0,0,64,66,248,64,64,0,0,0,0,16,16,0,0,8,32,64,32,8,0,0,16,16,0,0,0,0,0,128,192,34,15,152,127,112,199,140,137,107,107,168,39,33,176,145,72,42,16,136,192,34,32,0,0,0,0,0,0,64,0,1,1,0,48,48,56,24,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,31,2,2,8,0,2,0,8,0,34,32,248,32,34,0,136,0,43,1,136,4,38,34,170,220,168,112,160,208,160,96,128,128,128,0,0,0,0,0,64,80,80,80,81,80,80,80,0,80,56,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,64,160,208,170,118,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,0,34,0,136,0,162,240,24,236,27,12,70,226,50,15,102,178,152,144,147,218,210,146,210,180,20,36,8,24,48,0,0,0,0,0,0,0,0,0,192,224,224,224,224,64,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,16,34,64,136,8,63,96,154,63,64,0,185,211,0,24,116,145,41,64,172,146,190,86,46,137,192,40,30,1,13,192,0,64,0,0,0,0,0,0,97,113,49,48,0,0,0,0,0,0,0,0,0,0,66,240,64,0,0,0,0,0,64,64,0,0,32,128,0,128,32,0,0,0,0,0,0,0,10,0,137,0,39,12,152,49,33,162,142,148,25,62,108,204,24,140,128,33,33,16,152,204,6,35,0,0,0,0,0,0,16,0,0,0,0,12,12,14,6,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,128,0,34,0,138,7,34,0,136,0,50,0,136,34,38,32,254,32,36,34,136,0,43,1,136,4,38,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,64,80,80,80,80,80,80,80,0,80,56,80,0,0,0,0,0,0,2,0,8,0,2,0,8,2,35,0,11,0,35,2,8,0,34,0,8,0,2,0,8,0,2,0,8,0,34,0,136,0,34,8,136,0,34,0,136,0,32,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,224,30,3,224,60,6,227,60,4,192,0,66,166,2,99,241,2,234,202,22,176,224,20,245,61,198,56,199,56,224,1,255,0,1,254,0,0,0,0,0,0,0,0,56,60,60,28,28,8,2,1,0,0,2,0,8,0,34,0,136,0,32,0,8,0,2,0,8,0,2,0,8,3,2,0,15,0,36,31,240,192,130,7,56,51,39,74,25,17,1,148,148,191,200,71,48,59,128,192,123,62,27,207,193,112,30,3,0,64,0,0,0,0,0,0,12,14,6,134,128,192,192,0,0,0,0,0,0,64,66,248,64,64,0,0,0,0,8,8,0,0,4,16,32,16,4,0,0,8,8,0,8,0,43,17,171,102,100,76,72,192,129,137,136,140,76,102,36,19,129,240,216,44,54,17,152,200,4,34,0,0,0,0,0,0,2,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,128,0,34,0,138,7,34,0,136,0,34,0,136,34,36,32,254,35,37,34,128,0,43,1,128,4,38,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,64,80,80,80,80,80,82,81,0,83,56,81,2,8,0,34,0,8,0,2,0,8,0,2,0,8,0,34,0,8,0,34,64,136,0,34,0,136,0,34,0,136,0,32,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,128,98,32,156,8,238,102,59,157,196,98,59,9,12,132,196,194,226,35,57,17,19,24,136,136,42,8,152,16,48,96,0,0,0,0,0,0,0,0,192,224,224,224,224,64,2,8,8,0,34,0,136,0,34,0,136,0,34,0,8,0,34,0,8,0,32,0,0,0,34,60,11,0,38,0,136,255,0,0,254,3,112,28,6,226,57,233,41,33,196,77,201,153,51,102,204,24,97,227,206,140,58,224,0,64,0,0,0,0,0,0,97,113,49,48,0,0,0,0,0,0,0,0,0,0,66,240,64,0,0,0,0,0,64,64,0,0,32,128,0,128,32,0,0,64,64,0,0,1,6,0,31,240,0,143,24,127,80,199,140,137,107,107,40,39,33,176,145,72,40,16,128,211,30,33,0,0,0,0,0,0,16,0,0,0,0,12,12,14,6,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,136,0,34,2,138,15,34,2,131,6,12,8,128,0,32,32,240,32,0,0,0,32,43,17,0,4,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,8,0,2,0,8,0,34,0,136,0,34,0,136,0,34,0,136,0,34,0,137,0,32,0])
# 72x40 for 2 frames
shortFrames = bytearray([0,252,4,4,4,36,100,196,4,4,4,196,100,4,132,228,132,4,196,36,68,132,36,100,196,196,100,36,4,164,196,4,196,164,4,132,68,36,36,68,132,4,228,4,4,4,4,4,4,36,228,20,20,228,68,4,20,244,20,20,4,20,52,228,228,52,20,4,4,4,252,0,0,255,0,8,128,0,128,0,135,8,152,61,142,0,3,15,3,0,77,2,6,9,0,0,15,135,192,96,32,3,7,136,7,3,0,129,79,130,2,15,129,0,3,71,140,200,136,64,0,0,67,14,1,0,128,0,0,7,13,9,0,64,0,7,3,16,64,224,68,0,255,0,0,255,0,0,202,65,74,64,74,65,74,64,74,81,74,64,74,81,74,64,106,81,106,192,64,67,7,76,136,0,144,136,36,18,17,32,0,32,17,18,36,136,176,5,131,71,3,69,64,208,192,64,64,65,67,65,64,64,72,64,64,64,64,64,64,66,64,64,194,0,255,0,0,255,0,0,255,128,191,133,135,128,191,160,128,191,137,191,128,135,188,135,128,175,128,255,2,2,24,176,96,32,0,0,128,128,0,1,1,0,0,0,0,0,0,0,32,96,176,24,171,17,255,128,158,169,150,128,156,138,156,128,140,146,146,128,158,132,154,128,255,0,255,0,0,63,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,53,32,32,32,32,48,32,49,41,39,33,32,38,40,32,48,48,32,32,32,46,32,32,32,34,32,42,49,42,32,42,49,42,32,42,49,42,32,42,49,42,32,42,32,63,0,0,252,4,4,4,36,228,228,132,4,4,228,100,4,196,228,196,4,228,36,100,196,36,100,228,228,100,36,4,164,228,4,228,164,4,196,100,36,36,100,196,4,228,196,4,4,4,4,4,36,228,52,148,244,100,4,20,244,180,20,4,20,52,244,244,52,20,4,4,4,252,0,0,255,0,0,128,0,144,3,143,28,156,63,159,0,7,15,7,32,15,2,6,13,0,64,31,207,224,48,16,7,15,72,15,7,0,135,79,130,2,15,71,0,7,175,204,236,200,160,0,0,7,15,1,32,0,0,0,15,141,9,0,0,0,143,7,0,0,64,0,0,255,0,0,255,0,0,202,193,202,192,202,193,202,192,202,209,202,192,202,209,202,192,234,209,234,192,0,209,3,22,20,32,144,136,36,66,65,32,0,32,65,66,36,136,176,2,65,35,1,34,160,8,192,64,64,66,71,66,64,64,64,80,64,64,64,64,68,78,68,64,208,0,255,0,0,255,0,0,255,255,192,250,248,255,192,223,255,192,246,192,255,248,195,248,255,208,255,255,0,2,4,136,80,32,0,0,128,128,0,1,1,1,0,0,0,0,0,0,32,80,168,4,170,16,255,128,158,169,150,128,156,138,156,128,140,146,146,128,158,132,154,128,255,0,255,0,0,63,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,53,32,32,32,32,48,32,49,41,39,33,32,38,40,32,48,48,32,32,32,46,32,32,32,34,32,42,49,42,32,42,49,42,32,42,49,42,32,42,49,42,32,42,32,63,0])
# 72x40 for 2 frames
# 72x9 for 1 frames
choice1Frames = bytearray([0,252,254,254,134,118,86,150,254,6,214,6,254,6,246,238,246,6,254,6,86,86,254,2,2,250,42,10,2,114,138,114,2,114,138,114,2,250,138,82,34,2,2,10,250,10,2,114,138,114,2,10,242,10,2,2,250,34,250,2,10,242,10,114,138,170,106,2,2,254,252,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0])
# 72x9 for 1 frames
choice2Frames = bytearray([0,252,254,2,122,138,170,106,2,250,42,250,2,250,10,18,10,250,2,250,170,170,2,2,254,6,214,246,254,142,118,142,254,142,118,142,254,6,118,174,222,254,2,10,250,10,2,114,138,114,2,10,242,10,2,2,250,34,250,2,10,242,10,114,138,170,106,2,2,254,252,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0])
# 72x9 for 1 frames
choice3Frames = bytearray([0,252,254,2,122,138,170,106,2,250,42,250,2,250,10,18,10,250,2,250,170,170,2,2,2,250,42,10,2,114,138,114,2,114,138,114,2,250,138,82,34,2,254,246,6,246,254,142,118,142,254,246,14,246,254,2,250,34,250,2,10,242,10,114,138,170,106,2,2,254,252,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0])
# 72x9 for 1 frames
choice4Frames = bytearray([0,252,254,2,122,138,170,106,2,250,42,250,2,250,10,18,10,250,2,250,170,170,2,2,2,250,42,10,2,114,138,114,2,114,138,114,2,250,138,82,34,2,2,10,250,10,2,114,138,114,2,10,242,10,2,254,6,222,6,254,246,14,246,142,118,86,150,254,2,254,252,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0])
hygFrames = bytearray([0,252,254,2,2,122,34,122,2,10,114,10,2,122,74,106,2,2,2,2,2,2,18,50,114,114,114,114,114,114,50,18,66,66,2,2,2,2,2,114,50,114,18,18,18,18,50,50,50,50,50,2,2,2,2,2,2,34,82,82,114,82,82,34,2,2,2,2,2,254,252,0,0,252,254,2,2,122,34,122,2,10,114,10,2,122,74,106,2,2,2,254,254,254,238,206,142,142,142,142,142,142,206,238,190,190,254,254,2,2,2,114,50,114,18,18,18,18,50,50,50,50,50,2,2,2,2,2,2,34,82,82,114,82,82,34,2,2,2,2,2,254,252,0,0,252,254,2,2,122,34,122,2,10,114,10,2,122,74,106,2,2,2,2,2,2,18,50,114,114,114,114,114,114,50,18,66,66,2,2,2,2,2,114,50,114,18,18,18,18,50,50,50,50,50,2,2,2,2,2,2,34,82,82,114,82,82,34,2,2,2,2,2,254,252,0,0,252,254,2,2,122,34,122,2,10,114,10,2,122,74,106,2,2,2,2,2,2,18,50,114,114,114,114,114,114,50,18,66,66,2,2,254,254,254,142,206,142,238,238,238,238,206,206,206,206,206,254,254,2,2,2,2,34,82,82,114,82,82,34,2,2,2,2,2,254,252,0,0,252,254,2,2,122,34,122,2,10,114,10,2,122,74,106,2,2,2,2,2,2,18,50,114,114,114,114,114,114,50,18,66,66,2,2,2,2,2,114,50,114,18,18,18,18,50,50,50,50,50,2,2,2,2,2,2,34,82,82,114,82,82,34,2,2,2,2,2,254,252,0,0,252,254,2,2,122,34,122,2,10,114,10,2,122,74,106,2,2,2,2,2,2,18,50,114,114,114,114,114,114,50,18,66,66,2,2,2,2,2,114,50,114,18,18,18,18,50,50,50,50,50,2,2,254,254,254,254,222,174,174,142,174,174,222,254,254,254,254,2,254,252,0])
# 72x8 for 6 frames
toyFrames = bytearray([0,252,254,2,10,122,10,2,122,74,122,2,10,114,10,2,2,2,2,2,2,2,2,2,2,2,82,58,82,2,2,2,2,2,2,2,2,2,2,2,34,34,114,74,74,114,34,34,2,2,2,2,2,2,2,2,2,2,50,50,2,122,2,50,50,2,2,2,2,254,252,0,0,252,254,2,10,122,10,2,122,74,122,2,10,114,10,2,2,2,2,2,2,2,254,254,254,254,174,198,174,254,254,254,254,2,2,2,2,2,2,2,34,34,114,74,74,114,34,34,2,2,2,2,2,2,2,2,2,2,50,50,2,122,2,50,50,2,2,2,2,254,252,0,0,252,254,2,10,122,10,2,122,74,122,2,10,114,10,2,2,2,2,2,2,2,2,2,2,2,82,58,82,2,2,2,2,2,2,2,2,2,2,2,34,34,114,74,74,114,34,34,2,2,2,2,2,2,2,2,2,2,50,50,2,122,2,50,50,2,2,2,2,254,252,0,0,252,254,2,10,122,10,2,122,74,122,2,10,114,10,2,2,2,2,2,2,2,2,2,2,2,82,58,82,2,2,2,2,2,2,2,2,2,254,254,222,222,142,182,182,142,222,222,254,254,2,2,2,2,2,2,2,2,50,50,2,122,2,50,50,2,2,2,2,254,252,0,0,252,254,2,10,122,10,2,122,74,122,2,10,114,10,2,2,2,2,2,2,2,2,2,2,2,82,58,82,2,2,2,2,2,2,2,2,2,2,2,34,34,114,74,74,114,34,34,2,2,2,2,2,2,2,2,2,2,50,50,2,122,2,50,50,2,2,2,2,254,252,0,0,252,254,2,10,122,10,2,122,74,122,2,10,114,10,2,2,2,2,2,2,2,2,2,2,2,82,58,82,2,2,2,2,2,2,2,2,2,2,2,34,34,114,74,74,114,34,34,2,2,2,2,2,2,2,2,2,254,206,206,254,134,254,206,206,254,2,2,2,254,252,0])
foodFrames = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,0,64,32,0,16,16,0,8,0,0,8,8,0,16,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,192,192,0,16,0,128,128,144,0,0,192,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,96,248,248,220,140,140,220,252,124,62,50,226,226,254,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,3,1,71,31,111,199,198,238,254,63,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,3,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,64,64,0,32,16,0,8,8,0,4,0,0,4,4,0,136,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,192,192,0,0,0,144,128,128,0,16,192,192,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,112,252,252,206,142,142,206,254,126,63,51,227,243,127,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,131,15,55,71,198,230,254,31,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,1,3,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,64,0,32,32,0,16,0,0,16,16,0,32,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,9,193,240,240,184,24,24,184,248,248,124,100,196,196,252,30,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,6,6,6,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,7,3,143,63,223,143,140,220,252,127,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,1,7,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,0,64,32,0,16,16,0,8,0,0,8,8,0,16,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,24,25,24,24,0,2,24,24,0,0,0,0,0,0,3,4,96,248,248,220,140,140,220,252,124,62,50,226,226,254,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,3,1,71,31,111,199,198,238,254,63,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,3,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,192,192,192,0,0,0,0,48,48,0,0,0,0,0,0,48,48,0,0,0,0,192,192,192,192,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,135,7,79,47,7,7,32,0,160,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,8,60,22,243,147,159,252,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,192,192,0,0,0,0,0,0,0,0,0,0,0,192,192,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,252,252,252,252,252,252,0,0,0,0,0,0,112,112,243,243,243,240,240,240,240,240,240,240,112,112,240,240,3,3,3,0,0,240,240,240,240,240,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,56,112,112,112,123,120,120,120,115,123,120,120,123,115,0,0,0,0,0,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])   
# 20x30 for 2 frames
healFrames = bytearray([7,2,7,0,7,5,192,230,241,246,240,231,196,1,7,1,0,7,2,7,0,0,0,0,248,15,121,111,71,111,127,67,127,127,248,0,0,0,0,0,0,0,0,0,31,225,13,113,1,5,5,5,1,225,31,0,0,0,0,0,0,0,0,0,0,0,3,4,8,8,8,4,3,0,0,0,0,0,0,0,0,0,0,64,0,0,192,224,240,240,240,224,192,0,0,64,0,0,0,64,0,0,0,4,248,111,71,111,127,67,127,127,121,15,248,64,0,0,0,68,0,0,0,64,31,225,1,5,5,5,1,113,13,225,31,68,0,0,0,64,0,0,0,4,0,0,3,4,8,8,8,4,3,0,0,0,0,0,0,4])
# 31x25 for 2 frames
dogFrames = bytearray([117,255,85,255,247,255,253,255,31,239,223,239,239,239,239,223,239,159,127,255,255,254,253,255,255,127,253,255,119,255,85,119,255,247,255,255,255,255,0,255,247,238,227,235,238,247,255,255,255,255,254,253,253,251,251,248,255,0,255,255,255,85,87,255,87,255,127,255,127,252,227,223,239,247,199,191,223,239,247,247,207,191,223,239,215,223,239,241,126,255,127,255,85,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,117,255,85,255,247,255,253,255,15,247,109,239,239,111,237,239,247,143,125,255,255,254,253,255,255,255,253,255,119,255,85,119,255,85,255,255,255,255,0,255,251,245,241,245,251,255,255,255,255,255,254,253,253,251,248,254,248,3,255,119,255,85,87,255,85,255,127,255,127,224,223,207,239,247,231,223,207,231,247,247,199,223,223,231,199,223,207,225,126,255,119,255,85,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])
# 72x25 for 1 frames
chooseFrames = bytearray([0,255,0,85,224,113,252,245,255,255,255,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,255,252,213,240,113,192,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,255,0,0,255,0,85,255,119,255,255,255,255,255,255,255,255,255,255,243,241,241,125,61,61,61,129,137,227,255,255,255,255,255,255,255,255,255,255,255,119,255,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,255,0,0,255,0,85,15,55,127,127,255,255,255,255,255,255,255,255,255,255,255,176,191,48,255,255,255,255,255,255,255,255,255,127,255,127,255,87,63,23,7,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,0,85,0,17,0,85,0,16,255,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0])
# 20x30 for 6 frames
gc.collect()  
sadgasFrames = bytearray([0,255,151,23,147,139,207,33,169,7,129,1,137,1,1,33,1,69,17,57,17,69,1,1,137,1,161,1,169,17,33,1,43,17,43,1,41,17,169,1,41,17,169,1,169,17,161,1,193,133,1,129,1,145,65,1,33,65,1,133,33,1,145,65,145,33,65,69,1,1,255,0,0,255,10,64,107,243,107,32,11,17,10,0,186,57,184,0,170,17,170,0,186,57,186,0,42,1,2,0,224,224,224,8,16,16,72,64,72,16,16,104,96,0,0,0,2,1,10,0,170,25,170,13,2,8,144,0,128,4,136,1,2,4,21,18,19,1,8,67,0,0,255,0,0,255,0,0,0,132,192,224,193,0,0,128,0,25,60,28,10,0,10,0,10,17,10,0,24,16,32,0,32,0,160,0,160,0,160,0,128,0,128,0,128,0,160,0,160,16,168,0,186,57,186,0,170,17,170,0,186,57,186,0,170,17,170,0,170,144,168,0,160,0,255,0,0,127,128,128,144,128,144,145,144,144,144,128,168,144,168,128,128,129,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,130,128,130,129,130,128,138,129,138,128,130,129,130,128,130,129,138,128,138,129,130,128,128,128,128,128,130,129,130,128,139,147,139,128,138,129,127,0,0,255,151,23,179,155,239,33,169,135,177,1,171,21,171,1,163,69,177,57,17,69,131,17,171,145,171,1,169,1,161,1,161,1,161,1,161,17,161,1,161,17,161,1,129,1,129,1,1,133,1,129,1,145,1,1,1,1,5,1,33,129,81,177,161,33,193,1,5,1,255,0,0,255,0,0,34,49,122,48,19,131,3,0,6,1,10,128,58,57,186,0,170,16,170,0,43,19,11,0,2,129,130,32,64,64,32,0,32,65,64,32,128,129,2,0,10,17,42,0,170,24,170,13,170,24,168,1,130,0,144,38,4,1,4,18,17,8,0,128,0,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,10,17,170,0,168,16,160,0,128,1,129,0,128,0,1,1,1,0,128,0,129,1,0,0,128,0,160,64,168,17,170,0,186,57,186,0,170,17,170,0,170,144,168,0,168,16,168,0,160,0,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,144,128,144,144,144,144,144,128,168,144,168,128,129,128,128,130,129,130,128,138,129,138,128,138,145,138,128,138,145,170,128,138,129,138,129,170,145,138,128,130,129,138,128,130,129,130,128,171,147,171,128,170,145,170,128,186,184,127,0,0,255,151,23,147,139,239,33,169,7,185,1,129,137,129,17,1,69,17,57,145,69,129,1,137,145,169,1,169,17,169,1,169,17,161,1,161,17,161,1,161,1,129,1,129,1,1,1,65,129,17,129,1,129,69,1,33,129,41,17,193,81,209,201,1,33,133,1,1,1,255,0,0,255,10,0,42,49,122,48,18,129,2,0,11,3,43,128,186,57,186,0,170,17,170,0,43,19,11,0,10,1,2,0,2,1,2,0,2,1,2,0,10,17,42,0,42,17,170,0,186,8,130,13,130,8,144,0,132,0,38,36,36,5,5,9,12,6,128,0,144,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,42,17,170,0,136,0,0,0,28,28,28,1,2,2,9,8,9,2,2,1,12,12,0,0,128,0,162,0,186,57,186,0,170,17,170,0,186,57,186,0,168,16,168,0,170,17,170,0,42,17,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,130,128,130,129,138,128,138,144,136,128,136,144,136,128,138,128,130,128,130,129,130,128,146,129,146,144,144,144,144,128,168,145,168,128,130,129,130,128,130,129,128,128,128,128,127,0,0,255,151,23,147,139,239,33,41,7,185,1,1,9,129,1,1,69,17,57,17,69,129,1,137,1,161,1,161,17,169,1,169,17,171,1,171,17,169,1,169,17,161,1,129,1,1,1,65,129,17,129,1,129,69,1,33,65,9,129,33,1,145,65,145,33,69,65,1,1,255,0,0,255,10,0,42,49,122,48,18,145,170,0,186,56,58,0,170,16,168,0,184,57,186,0,10,1,2,0,2,1,0,64,128,129,64,0,64,128,128,64,0,1,2,0,10,17,42,0,168,16,162,13,186,56,184,0,128,4,8,1,2,4,149,18,147,1,8,67,0,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,149,168,0,170,145,170,0,128,0,0,0,0,1,1,0,0,0,2,2,2,0,0,0,1,1,0,0,128,0,160,0,186,57,186,0,170,17,42,0,42,16,42,0,42,17,10,0,58,57,186,0,168,0,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,128,128,128,128,128,128,128,131,131,139,128,138,145,138,128,138,145,138,128,138,145,138,128,138,145,138,128,138,129,138,128,138,145,138,128,138,129,130,128,128,128,128,128,128,144,128,144,144,144,144,144,128,169,146,168,130,129,127,0,0,255,151,23,147,139,239,33,169,7,185,1,1,9,65,1,1,69,17,57,17,69,1,1,9,1,1,1,129,17,169,1,169,17,161,1,161,1,161,1,161,1,129,1,129,1,1,1,65,129,17,129,1,129,69,1,33,129,41,17,193,81,209,201,1,33,133,1,1,1,255,0,0,255,10,0,42,49,122,48,18,129,2,0,58,57,58,128,168,0,168,0,184,56,184,0,42,1,2,0,2,129,128,32,64,65,32,0,32,65,64,32,130,129,2,0,10,17,170,0,168,24,130,13,130,136,144,0,132,0,38,36,36,5,5,9,12,6,128,0,144,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,10,17,170,0,168,0,128,0,0,1,1,0,0,0,1,1,1,0,0,0,129,1,128,0,128,16,234,224,234,17,170,0,171,19,171,0,170,17,170,0,168,144,168,0,170,17,170,0,42,17,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,130,129,138,128,138,129,138,128,138,145,138,128,138,145,138,128,138,129,138,128,130,129,138,128,138,145,170,128,136,129,128,128,128,129,128,128,131,131,131,128,130,129,128,128,128,128,127,0,0,255,151,23,179,155,239,33,169,7,177,1,161,5,33,129,131,133,17,57,17,69,131,17,161,1,161,1,129,1,161,1,33,17,33,1,33,17,161,1,161,1,161,1,129,1,129,1,1,133,1,129,1,145,1,1,1,1,5,1,33,129,81,177,161,33,193,1,5,1,255,0,0,255,0,0,34,49,122,48,18,129,2,0,6,1,8,131,43,3,168,0,186,57,186,0,10,1,2,0,0,64,64,16,32,32,144,128,144,32,32,16,64,65,0,0,10,17,170,0,160,16,162,13,130,8,128,1,130,0,144,38,4,1,4,18,17,8,0,128,0,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,42,17,170,0,170,16,168,0,160,0,160,0,128,0,128,0,128,0,160,0,160,0,160,0,160,16,170,64,250,57,186,0,170,17,170,0,42,17,170,0,170,144,168,0,168,16,168,0,160,0,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,130,128,130,145,170,128,170,145,170,128,170,145,170,128,138,145,170,128,170,145,136,129,138,145,138,128,138,129,130,128,128,128,128,128,131,131,131,128,130,129,130,128,128,128,127,0])
# 72x32 for 6 frames
happystatFrames = bytearray([0,255,151,23,147,139,207,33,169,7,129,1,137,1,1,33,1,69,17,57,17,69,1,1,9,1,1,1,1,1,1,1,1,1,1,129,1,1,1,1,1,1,129,1,129,1,1,1,65,133,1,129,1,145,65,1,33,65,1,133,33,1,145,65,145,33,65,69,1,1,255,0,0,255,10,64,106,241,106,32,11,17,10,0,170,1,168,0,168,16,128,0,128,0,128,0,160,0,32,32,64,32,16,72,36,34,65,0,65,34,36,72,16,99,7,143,71,3,64,64,16,8,2,13,2,8,144,0,128,4,136,1,2,4,21,18,19,1,8,67,0,0,255,0,0,255,0,0,0,132,192,224,193,0,0,128,0,25,60,28,10,0,10,0,10,16,10,0,21,8,16,160,64,1,1,0,0,3,6,6,6,3,0,0,1,1,0,64,160,16,72,5,168,16,168,0,170,17,170,0,170,17,170,0,170,17,170,0,170,16,168,0,160,0,255,0,0,127,128,128,144,128,144,145,144,144,144,128,168,144,168,128,128,129,128,128,128,128,128,128,128,170,193,128,192,128,160,129,163,146,142,130,128,140,144,128,160,160,128,192,128,221,128,128,130,129,138,128,138,129,130,128,128,128,128,128,130,129,130,128,138,145,138,128,138,129,127,0,0,255,151,23,179,155,239,33,169,7,177,1,161,5,33,1,131,69,17,57,17,69,131,17,1,1,1,1,1,1,1,1,1,129,65,33,65,129,1,1,113,249,249,225,249,249,113,1,1,133,1,129,1,145,1,1,1,1,5,1,33,129,81,177,161,33,193,1,5,1,255,0,0,255,0,0,34,49,122,48,18,129,2,0,6,1,10,128,40,0,170,0,170,0,168,0,232,0,8,8,16,104,100,18,9,200,208,128,208,200,9,18,100,104,1,35,17,0,16,80,0,8,2,13,130,8,128,1,130,0,144,38,4,1,4,18,17,8,0,128,0,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,2,0,2,0,5,130,68,40,16,0,0,64,192,128,129,129,1,0,0,0,0,0,0,16,40,68,18,69,168,16,170,0,170,17,42,0,42,17,170,0,170,16,168,0,168,16,168,0,160,0,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,144,128,144,144,144,144,144,128,168,144,168,128,138,144,128,144,128,136,128,136,132,131,128,128,131,132,128,136,136,128,144,128,151,128,129,130,129,130,128,128,128,128,128,128,128,128,128,130,129,130,128,130,129,130,128,128,128,127,0,0,255,151,23,147,139,239,33,169,7,185,1,1,9,65,1,1,69,17,57,17,69,1,1,9,1,1,1,1,1,1,129,65,33,17,9,17,33,65,129,1,29,61,121,61,29,1,1,65,129,17,129,1,129,69,1,33,129,41,17,193,81,209,201,1,33,133,1,1,1,255,0,0,255,10,0,42,49,122,48,18,129,2,0,10,1,42,128,168,0,168,0,168,0,168,0,90,128,2,2,4,18,17,4,2,2,36,64,36,2,2,4,17,22,0,8,4,0,132,84,144,8,130,13,130,8,144,0,132,0,38,36,36,5,5,9,12,6,128,0,144,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,2,0,2,0,2,160,17,10,4,0,0,16,48,32,224,32,0,192,0,0,0,0,0,4,10,209,2,72,162,16,170,0,42,17,42,0,170,17,170,0,168,16,168,0,170,17,170,0,42,17,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,130,132,128,132,128,130,128,130,129,128,128,128,128,129,128,130,130,128,132,128,133,128,128,144,129,144,144,144,144,144,128,168,145,168,128,130,129,130,128,130,129,128,128,128,128,127,0,0,255,151,23,147,139,239,33,41,7,185,1,1,9,129,1,1,69,17,57,17,69,1,1,9,1,1,1,1,1,129,65,33,17,9,5,9,17,33,65,157,63,127,249,127,63,29,1,65,129,17,129,1,129,69,1,33,65,9,129,33,1,145,65,145,33,69,65,1,1,255,0,0,255,10,0,42,49,122,48,18,145,170,0,170,16,42,0,170,16,168,0,168,0,160,0,173,64,129,1,2,13,12,2,1,25,50,48,50,25,1,2,8,9,0,4,2,128,194,42,144,8,2,13,130,8,16,0,0,4,8,1,2,4,149,18,147,1,8,67,0,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,133,0,0,2,1,2,0,2,80,10,5,2,0,0,8,24,144,112,16,0,96,128,0,0,0,0,2,5,233,10,0,10,17,42,0,42,17,42,0,42,16,42,0,42,17,10,0,42,17,170,0,168,0,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,130,128,130,128,129,128,129,128,128,128,128,128,128,128,129,129,128,130,128,130,128,128,128,128,128,128,128,128,128,128,128,144,128,144,144,144,144,144,128,169,146,168,130,129,127,0,0,255,151,23,147,139,239,33,169,7,185,1,1,9,65,1,1,69,17,57,17,69,1,1,9,1,1,1,1,1,1,129,65,33,17,9,17,33,65,129,1,49,121,241,121,49,1,1,65,129,17,129,1,129,69,1,33,129,41,17,193,81,209,201,1,33,133,1,1,1,255,0,0,255,10,0,42,49,122,48,18,129,2,0,10,1,42,128,168,0,168,0,168,0,168,0,90,128,2,2,4,26,25,4,2,50,100,96,100,50,2,4,25,26,0,8,4,0,132,84,144,8,130,13,130,8,144,0,132,0,38,36,36,5,5,9,12,6,128,0,144,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,2,0,2,0,2,160,17,10,4,0,0,16,48,32,224,32,0,192,0,0,0,0,0,4,10,209,2,72,162,16,170,0,42,17,42,0,170,17,170,0,168,16,168,0,170,17,170,0,42,17,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,130,132,128,132,128,130,128,130,129,128,128,128,128,129,128,130,130,128,132,128,133,128,128,128,129,128,128,128,128,128,128,128,129,128,128,130,129,130,128,130,129,128,128,128,128,127,0,0,255,151,23,179,155,239,33,169,7,177,1,161,5,33,1,131,69,17,57,17,69,131,17,1,1,1,1,1,1,1,1,1,129,65,33,65,129,1,1,1,97,241,225,241,97,1,1,1,133,1,129,1,145,1,1,1,1,5,1,33,129,81,177,161,33,193,1,5,1,255,0,0,255,0,0,34,49,122,48,18,129,2,0,6,1,10,128,40,0,170,0,170,0,168,0,232,0,8,8,16,72,68,18,9,200,144,128,144,200,9,18,68,88,0,33,16,0,16,80,0,8,2,13,130,8,128,1,130,0,144,38,4,1,4,18,17,8,0,128,0,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,2,0,2,0,5,130,68,40,16,0,0,64,192,128,129,129,1,0,0,0,0,0,0,16,40,68,18,69,168,16,170,0,170,17,42,0,42,17,170,0,170,16,168,0,168,16,168,0,160,0,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,138,144,128,144,128,136,128,136,132,131,128,128,131,132,128,136,136,128,144,128,151,128,129,130,129,130,128,128,128,128,128,128,128,128,128,130,129,130,128,130,129,130,128,128,128,127,0])
# 72x32 for 6 frames
sadstarFrames = bytearray([0,255,151,23,147,139,207,33,169,7,129,1,137,1,1,33,1,69,17,57,17,69,1,1,1,1,97,65,193,1,1,1,1,1,13,185,1,1,1,1,1,1,129,129,225,33,1,1,65,133,1,129,1,145,65,1,33,65,1,133,33,1,145,65,145,33,65,69,1,1,255,0,0,255,10,64,106,241,106,32,11,17,10,0,170,1,168,0,168,16,128,0,128,0,128,0,160,0,32,32,65,35,16,72,132,130,65,0,65,130,132,72,20,99,1,128,64,0,64,64,16,8,2,13,2,8,144,0,128,4,136,1,2,4,21,18,19,1,8,67,0,0,255,0,0,255,0,0,0,132,192,224,193,0,0,128,0,25,60,28,10,0,10,0,10,16,10,0,21,8,16,160,64,1,1,0,0,0,2,2,2,0,0,0,1,1,0,64,160,16,72,5,168,16,168,0,170,17,170,0,170,17,170,0,170,17,170,0,170,16,168,0,160,0,255,0,0,127,128,128,144,128,144,145,144,144,144,128,168,144,168,128,128,129,128,128,128,128,128,128,128,170,193,128,192,128,160,129,163,146,142,130,128,140,144,128,160,160,128,192,128,221,128,128,130,129,138,128,138,129,130,128,128,128,128,128,130,129,130,128,138,145,138,128,138,129,127,0,0,255,151,23,179,155,239,33,169,7,177,1,161,5,33,1,131,85,17,125,17,85,131,1,1,1,1,1,1,1,1,1,1,129,65,33,65,129,1,1,1,1,1,1,1,1,1,1,65,133,1,193,1,145,65,1,1,1,5,1,33,129,81,177,161,33,193,1,5,1,255,0,0,255,0,0,34,49,122,48,18,129,2,0,6,1,10,128,40,0,170,0,170,0,168,0,232,0,8,8,16,72,68,18,33,32,144,128,144,32,33,18,68,88,0,32,16,0,16,80,16,10,2,61,130,10,144,1,130,0,144,38,4,1,4,18,17,8,0,128,0,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,2,0,2,0,5,130,68,40,16,0,0,64,192,128,128,128,0,0,0,0,0,0,0,16,40,68,18,69,168,16,170,0,170,17,42,0,42,17,170,0,170,16,168,0,168,16,168,0,160,0,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,144,128,144,144,144,144,144,128,168,144,168,128,138,144,128,144,128,136,128,136,132,131,128,128,131,132,128,136,136,128,144,128,151,128,129,130,129,130,128,128,128,128,128,128,128,128,128,130,129,130,128,130,129,130,128,128,128,127,0,0,255,151,23,147,139,239,33,169,7,185,1,1,9,65,1,1,69,17,57,17,69,1,1,1,1,1,1,1,1,1,129,65,33,17,9,17,33,65,129,1,1,1,1,1,1,1,1,65,129,17,129,1,129,69,1,33,129,41,17,193,81,209,201,1,33,133,1,1,1,255,0,0,255,10,0,42,49,122,48,18,129,2,0,10,1,42,128,168,0,168,0,168,0,168,0,90,128,2,2,4,18,17,0,8,8,32,32,32,8,8,0,17,22,0,8,4,0,132,84,144,8,130,13,130,8,144,0,132,0,38,36,36,5,5,9,12,6,128,0,144,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,2,0,2,0,2,160,17,10,4,0,0,16,48,32,224,32,0,192,0,0,0,0,0,4,10,209,2,72,162,16,170,0,42,17,42,0,170,17,170,0,168,16,168,0,170,17,170,0,42,17,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,130,132,128,132,128,130,128,130,129,128,128,128,128,129,128,130,130,128,132,128,133,128,128,144,129,144,144,144,144,144,128,168,145,168,128,130,129,130,128,130,129,128,128,128,128,127,0,0,255,151,23,147,139,239,33,41,7,185,1,1,9,129,1,1,69,17,57,17,69,1,1,1,1,1,1,1,1,129,65,33,17,9,5,9,17,33,65,129,1,1,1,1,1,1,1,65,129,17,129,1,129,69,1,33,65,9,129,33,1,145,65,145,33,69,65,1,1,255,0,0,255,10,0,42,49,122,48,18,145,170,0,170,16,42,0,170,16,168,0,168,0,160,0,173,64,129,1,2,9,8,0,4,4,16,16,16,4,4,0,8,11,0,4,2,128,194,42,144,8,2,13,130,8,16,0,0,4,8,1,2,4,149,18,147,1,8,67,0,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,133,0,0,2,1,2,0,2,80,10,5,2,0,0,8,24,144,112,16,0,96,128,0,0,0,0,2,5,233,10,0,10,17,42,0,42,17,42,0,42,16,42,0,42,17,10,0,42,17,170,0,168,0,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,130,128,130,128,129,128,129,128,128,128,128,128,128,128,129,129,128,130,128,130,128,128,128,128,128,128,128,128,128,128,128,144,128,144,144,144,144,144,128,169,146,168,130,129,127,0,0,255,151,23,147,139,239,33,169,7,185,1,1,9,65,1,1,85,17,125,17,85,1,1,1,1,1,1,1,1,1,129,65,33,17,9,17,33,65,129,1,1,1,1,1,1,1,1,65,129,17,129,1,129,69,1,33,129,41,17,193,81,209,201,1,33,133,1,1,1,255,0,0,255,10,0,42,49,122,48,18,129,2,0,10,1,42,128,168,0,168,0,168,0,168,0,90,128,2,2,4,18,17,0,8,72,32,32,32,72,8,0,17,22,0,8,4,0,132,84,144,8,130,13,130,8,144,0,132,0,38,36,36,5,5,9,12,6,128,0,144,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,2,0,2,0,2,160,17,10,4,0,0,16,48,32,224,32,0,192,0,0,0,0,0,4,10,209,2,72,162,16,170,0,42,17,42,0,170,17,170,0,168,16,168,0,170,17,170,0,42,17,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,130,132,128,132,128,130,128,130,129,128,128,128,128,129,128,130,130,128,132,128,133,128,128,128,129,128,128,128,128,128,128,128,129,128,128,130,129,130,128,130,129,128,128,128,128,127,0,0,255,151,23,179,155,239,33,169,7,177,1,161,5,33,1,131,69,17,57,17,69,131,1,1,1,1,1,1,1,1,1,1,129,65,33,65,129,1,1,1,1,1,1,1,1,1,1,1,133,1,193,1,145,1,1,1,1,5,1,33,129,81,177,161,33,193,1,5,1,255,0,0,255,0,0,34,49,122,48,18,129,2,0,6,1,10,128,40,0,170,0,170,0,168,0,232,0,8,8,16,72,68,18,33,32,144,128,144,32,33,18,68,88,0,32,16,0,16,80,0,10,2,29,130,10,128,1,130,0,144,38,4,1,4,18,17,8,0,128,0,0,255,0,0,255,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,2,0,2,0,5,130,68,40,16,0,0,64,192,129,128,128,0,1,0,0,0,0,0,16,40,68,18,69,168,16,170,0,170,17,42,0,42,17,170,0,170,16,168,0,168,16,168,0,160,0,255,0,0,127,128,128,130,131,135,131,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,138,144,128,144,128,136,128,136,132,131,128,128,131,132,128,136,136,128,144,128,151,128,129,130,129,130,128,128,128,128,128,128,128,128,128,130,129,130,128,130,129,130,128,128,128,127,0])
# 20x30 for 6 frames
angryFrames = bytearray([0,0,0,0,0,0,0,128,128,0,0,0,128,128,0,0,0,0,0,0,0,0,0,112,112,112,4,8,9,37,32,36,9,8,52,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,192,16,32,35,150,128,148,38,35,16,192,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,8,24,144,0,128,16,24,136,0,0,0,0,0,0,0,0,14,14,14,0,1,1,4,4,4,1,1,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,112,216,8,12,0,0,0,0,0,0,0,128,0,0,0,0,128,128,0,0,72,16,0,16,72,0,0,128,128,4,6,1,8,0,0,0,0,0,0,0,0,3,3,67,64,64,64,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,12,8,0,0,128,128,196,124,112,192,0,0,0,0,128,96,32,16,16,16,152,8,132,128,24,12,8,24,208,192,0,0,36,136,128,128,40,4,0,192,193,1,0,32,16,8,8,0,0,0,0,240,8,1,1,1,0,8,8,8,8,56,232,0,0,0,0,0,0,0,0,1,1,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,9,19,18,72,64,72,18,19,9,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
# 20x30 for 4 frames
sadFrames = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,112,112,4,184,8,36,32,36,8,152,52,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,192,16,32,32,144,128,144,32,32,16,192,192,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,128,0,128,0,0,128,0,0,0,0,0,0,0,0,14,14,14,0,1,3,4,4,4,1,3,0,6,6,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,8,16,16,72,64,72,16,16,8,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
# 20x30 for 6 frames
sickFrames = bytearray([0,0,0,0,0,0,0,0,0,0,0,8,0,112,80,112,0,0,0,0,0,0,0,112,80,112,0,0,72,32,32,32,64,8,48,48,0,0,0,0,0,0,192,64,192,0,16,0,0,0,0,0,56,40,56,0,128,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,248,15,64,192,0,255,0,0,255,0,192,127,0,0,255,0,0,0,3,0,1,194,194,19,32,19,128,128,145,32,17,0,192,192,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,240,63,0,0,0,255,0,0,255,0,0,255,0,0,255,0,0,0,63,0,15,48,51,63,0,63,0,0,15,0,15,3,0,0,15,0,0,0,0,0,14,10,14,0,1,8,4,4,4,9,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,248,15,128,128,0,255,0,0,255,0,128,255,0,0,255,0,0,0,7,0,3,132,132,39,64,39,0,0,35,64,35,0,128,128,3,0,0,0,0,0,0,0,0,0,0,2,7,7,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,0,124,7,16,112,0,127,0,0,127,0,112,31,0,0,127,0,0,0,0,0,0,192,192,0,0,32,128,128,128,0,32,0,192,192,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,112,80,112,0,0,0,0,0,0,0,0,32,32,0,0,144,64,64,64,128,16,0,32,32,0,0,0,0,0,192,64,192,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,14,10,14,0,1,0,0,0])
# 20x30 for 2 frames
brushFrames = bytearray([0,0,48,120,240,120,48,128,128,64,64,96,80,88,176,96,192,128,0,0,48,52,0,32,64,64,36,0,0,1,113,117,117,3,40,36,36,161,155,214,0,0,0,0,0,0,6,15,30,15,6,0,0,0,0,0,1,1,0,0,0,31,21,14,0,31,5,26,0,15,16,15,0,23,29,0,31,4,31,0,0,12,30,60,30,12,32,32,144,80,80,88,116,236,216,48,96,192,128,0,96,104,4,40,64,64,40,4,8,0,48,49,5,21,22,147,210,76,121,51,0,128,128,0,0,128,128,0,0,140,30,188,30,140,128,0,128,0,128,0,0,15,10,7,0,15,2,13,0,7,8,7,0,11,14,0,15,2,15,0])
# 20x30 for 2 frames
bathFrames = bytearray([0,16,72,64,40,0,128,96,48,112,128,16,224,192,160,192,136,20,8,0,0,0,0,0,112,112,115,1,1,1,37,65,32,0,0,52,49,0,0,0,96,240,88,252,116,224,64,224,112,224,64,240,120,236,94,248,112,224,96,248,5,50,25,12,6,12,57,39,5,14,5,35,49,28,4,12,25,50,5,15,32,2,8,20,8,130,136,192,240,16,128,112,48,96,128,0,2,5,2,0,0,0,0,0,49,52,0,32,64,65,37,1,1,1,115,112,114,5,2,0,112,224,112,248,112,248,92,254,86,236,92,248,112,224,96,240,96,224,80,240,5,38,33,49,17,16,17,55,37,14,5,15,37,34,49,17,25,8,25,55])
# 31x25 for 2 frames
cowFrames = bytearray([255,207,183,55,183,247,247,227,237,227,199,199,131,153,131,247,119,183,143,255,255,255,255,255,255,221,255,85,255,223,255,255,255,255,224,215,188,165,63,191,167,191,204,253,255,223,239,62,56,48,224,224,224,225,225,115,167,47,95,63,125,255,127,95,127,85,127,95,127,92,3,119,119,15,127,127,127,15,14,14,111,15,127,127,127,7,112,95,127,87,124,88,127,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,255,243,205,61,187,243,247,227,237,227,231,231,195,217,195,247,243,59,91,103,127,127,255,255,255,221,255,85,255,223,127,255,255,255,224,215,190,150,15,143,151,191,206,254,255,223,239,63,28,60,248,248,248,240,241,115,103,47,164,144,192,253,127,95,127,85,127,95,127,92,131,183,183,15,191,191,191,15,15,15,175,15,191,191,191,7,112,95,127,87,127,95,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
# 31x25 for 2 frames
catFrames = bytearray([85,255,221,255,117,127,61,207,245,239,221,223,237,247,109,95,157,223,221,223,189,191,125,255,85,255,221,255,85,255,220,85,255,253,255,253,129,6,47,110,83,209,147,158,191,189,189,237,231,119,127,127,63,63,124,131,255,221,255,85,255,221,85,63,93,127,85,255,223,254,84,252,220,252,84,252,220,252,84,252,220,252,84,254,222,255,85,255,221,127,85,31,77,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,85,255,221,255,117,127,61,207,245,239,221,223,237,247,109,95,157,223,221,223,189,191,125,255,85,255,221,255,85,255,220,85,255,253,255,253,129,102,143,14,27,25,27,30,63,63,55,231,247,127,127,127,63,63,124,131,255,221,255,85,255,221,85,63,93,127,85,255,223,254,85,253,221,253,85,253,221,253,85,252,220,252,84,254,222,255,85,255,221,127,85,31,77,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0])
# 45x9 for 1 frames
gc.collect()  
gc.threshold(gc.mem_free() // 4 + gc.mem_alloc())
thumby.display.setFPS(4) 


###########################################################################################
###################MINI GAME LOGIC ########################################################
###########################################################################################
def intToRoman(num: int) -> str:
    M = ["", "M", "MM", "MMM"]
    C = ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"]
    X = ["", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"]
    I = ["", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"]
    return M[num // 1000] + C[(num % 1000) // 100] + X[(num % 100) // 10] + I[num % 10]

def isPalindrome(self, x):
    if x > 0:
        temp = x
        rev_int_elements = []
        while temp > 0:
            digit = temp % 10
            rev_int_elements.append(digit)
            temp = temp // 10
        org_int_elements = rev_int_elements[::-1]
        return rev_int_elements == org_int_elements
    elif x == 0:
        return True
    else:
        return False

class Game:
    def __init__(self, name, answer, text, userAnswer):
        self.name = name
        self.answer = answer
        self.text = text
        self.userAnswer= userAnswer
game1 = Game("Roman Quest", randnum, intToRoman(randnum),userInput)    
game2 = Game("PAlindroME!", True, palindromenum, isPalindrome(isPalindrome,(userInput))) 
game3 = Game("BinaryBeats", randnumber,bin(randnumber)[2:], userInput)
game4 = Game("Witch's Hex",randnumber,hex(randnumber)[2:],userInput)


gc.collect()
###########################################################################################
################### BUILD STAR CHARACTER ##################################################
###########################################################################################
class Star:
    def __init__(self, food, toy, hyg, sad, sick, happy, angry, edu, level ):
        self.food = food
        self.toy = toy
        self.hyg = hyg
        self.sad = sad
        self.sick = sick
        self.happy = happy  
        self.angry = angry
        self.edu = edu
        self.level= level 
       
starpet = Star(0,0,0,0,0,4,0,0,0)

gc.collect()
###########################################################################################
################### MANAGE BACKGROUND CHANGES #############################################
###########################################################################################




#-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=--=x=
#                        START OF GAME                           # 
#-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=--=x=

while(True):
    gc.collect()     
    gc.threshold(gc.mem_free() // 4 + gc.mem_alloc()) 
    #CHECK MEMORY USAGE EVERY WHILE LOOP (WHICH USES MEMORY TO DO)
    #print('Memory Free:', "{:,}".format(gc.mem_free()), 'bytes')
    #print('Memory Allocated:', "{:,}".format(gc.mem_alloc()), 'bytes')
    #Manage Data by playing only a few animations at a time switching SPR and SPRX
    #Called upon objects like text and images take up memory and do not go away once called
    #Text is covered with either image or filling black, but the system is running it on memory
    if pageNumber==0:
    #PLAY INTRO BY PRESSING A SLIDE BY SLIDE
        if (abutton == 0):
            Spr = thumby.Sprite(72, 40, introFrames)
            while (abutton == 0):
                Spr.setFrame(Spr.currentFrame+1)
                thumby.display.drawSprite(Spr)
                thumby.display.setFont("/lib/font5x7.bin", 5, 7, 1)
                thumby.display.drawText("In a Galaxy", 0,0, 1)
                thumby.display.update()
                if thumby.buttonA.pressed():
                    abutton=abutton+1
        elif abutton == 1:
            Spr = thumby.Sprite(72, 40, introFrames) 
            while (abutton == 1):
                thumby.display.drawSprite(Spr)
                Spr.setFrame(Spr.currentFrame+1)
                thumby.display.setFont("/lib/font5x7.bin", 5, 7, 1)
                thumby.display.drawText("far,far away", 0,0, 1)
                if thumby.buttonA.pressed():
                    abutton=abutton+1
                thumby.display.update()
        elif abutton == 2:
            Spr = thumby.Sprite(72, 40, supernovaFrames) 
            while (abutton == 2):
                thumby.display.drawSprite(Spr)
                Spr.setFrame(Spr.currentFrame+1)
                thumby.display.setFont("/lib/font5x7.bin", 5, 7, 1)
                thumby.display.drawText(" a new star!", 0,0, 1)
                if thumby.buttonA.pressed():
                    abutton=abutton+1
                thumby.display.update()
        elif abutton == 3:
            Spr = thumby.Sprite(72, 40, galaxyFrames)
            while (abutton == 3):
                thumby.display.drawSprite(Spr)
                Spr.setFrame(Spr.currentFrame+1)
                if thumby.buttonA.pressed():
                    abutton=abutton+1
                thumby.display.update()
        elif abutton == 4:
            Spr = thumby.Sprite(72, 10, shortFrames,0,20) 
            thumby.display.drawSprite(Spr)
            Spr.setFrame(Spr.currentFrame+1)
            thumby.display.update()
            abutton = abutton+1
        else:
            Spr = thumby.Sprite(72, 40, shortFrames) 
            while (abutton > 4 and pageNumber==0):
                thumby.display.drawSprite(Spr)
                Spr.setFrame(Spr.currentFrame+1)
                thumby.display.update()
                if thumby.buttonA.pressed():
                    pageNumber = 1
                    abutton = 2
                if thumby.buttonB.pressed():
                    thumby.reset() # exit game to main menu   
    #START AT PET PAGE------------------------------------------
    elif pageNumber==1:
    #DATA PAGE IF PRESS UP -------------------------------------   
        if data == True:
            thumby.display.fill(0)
            thumby.display.setFont("/lib/font5x7.bin", 5, 7, 1)
            thumby.display.drawText("Level:" + str(starpet.level), 4,5, 1)
            thumby.display.drawText("Happy:" + str(starpet.happy), 4,15, 1)
            thumby.display.drawText("Smart:" + str(starpet.edu), 4,25, 1)
            #UP AND DOWN BUTTONS SET FOR DATA ON OR OFF
            if thumby.buttonU.pressed():
                data=True
            if thumby.buttonD.pressed():
                data=False
            thumby.display.update()    
        else:
    #PET MOOD DISPLAYED AND USER OPTIONS ----------------------------
            #If you repeat action twice, negative effect
            #Every Action Resets Values of other Actions
            
            #SHOW PET MOOD BACKGROUND
            if starpet.sick > 0:
                thumby.display.fill(0) 
                Spr = thumby.Sprite(20, 30, sickFrames,30,8)
            elif starpet.angry >0:
                thumby.display.fill(0) 
                Spr = thumby.Sprite(20, 30, angryFrames,30,8)
            elif starpet.sad > 0:
                thumby.display.fill(0) 
                Spr = thumby.Sprite(20, 30, sadFrames,30,8)
            else :
                if starpet.level > 5:
                    if starpet.happy > 5:
                        Spr = thumby.Sprite(72, 32, happystatFrames,0,8)
                    else:
                        Spr = thumby.Sprite(72, 32, sadstarFrames,0,8)
                else :
                    if starpet.happy > 5:
                        Spr = thumby.Sprite(72, 40, introFrames,0,0)
                    else:
                        Spr = thumby.Sprite(72, 32, sadgasFrames,0,8)
            
            #SHOW OPTIONS MENU ANIMATION
            while (data == False and pageNumber==1):
                if abutton > 5:
                    abutton = 2
                if abutton == 2:
                    SprX = thumby.Sprite(72, 9, choice1Frames)
                elif abutton == 3:
                    SprX = thumby.Sprite(72, 9, choice2Frames)
                elif abutton == 4:
                    SprX = thumby.Sprite(72, 9, choice3Frames) 
                elif abutton == 5:
                    SprX = thumby.Sprite(72, 9, choice4Frames)    
                thumby.display.drawSprite(Spr)
                Spr.setFrame(Spr.currentFrame+1)
                thumby.display.drawSprite(SprX)
                SprX.setFrame(SprX.currentFrame+1)
                #UP AND DOWN BUTTONS SET FOR DATA ON OR OFF
                if thumby.buttonU.pressed():
                    data=True
                if thumby.buttonD.pressed():
                    data=False
                #CONTROL PAGE NUMBER FROM USER SELECT    
                if thumby.buttonR.pressed():
                    abutton=abutton+1
                if thumby.buttonB.pressed():
                    abutton=abutton+1
                if thumby.buttonL.pressed():
                    abutton=abutton-1    
                if thumby.buttonA.pressed():
                    pageNumber = abutton
                
                thumby.display.update()
    #MINI GAME PAGE ----------------------------------------------------------------------
    #The logic here is to control the input of the user and generate a Question and Answer
    
    elif pageNumber==2:
        game1.answer = randy1[num]
        game1.text = intToRoman(game1.answer)
        game2.text =  randy3[num]
        game3.answer = randy2[num]
        game3.text = bin(game3.answer)[2:]
        game4.answer = randy2[num]
        game4.text = hex(game4.answer)[2:]
        if game > 3:
            game = 0
        thumby.display.fill(0)
        place=0
        ones = 0
        tens = 0
        hundreds = 0
        while (pageNumber == 2):
            thumby.display.fill(0) 
            thumby.display.drawText("GAME:", 0,2, 1)
            thumby.display.drawText("<LR> +UD- AB", 0,30, 1)
            if game == 0 :
                thumby.display.drawText(game1.name, 3,10, 1)
                thumby.display.drawText(game1.text + "= ?", 3,20, 1)
            elif game ==1 :
                thumby.display.drawText(game2.name, 3,10, 1)
                thumby.display.drawText("? * "+str(game2.text)+"= []", 3,20, 1)
            elif game ==2 :
                thumby.display.drawText(game3.name, 3,10, 1)
                thumby.display.drawText(str(game3.text) + "= ?", 3,20, 1) 
            elif game ==3 :
                thumby.display.drawText(game4.name, 3,10, 1)
                thumby.display.drawText(game4.text + "= ?", 3,20, 1)
            else:
                thumby.display.drawText(game2.name, 3,10, 1)
                thumby.display.drawText(game1.text+ "= ?", 3,20, 1)

    #This logic toggles between the input zones            
            if place > 2:
                place = 0
            if place < 0:
                place = 0
    #This logic Exits the Page with no Effects 
            if thumby.buttonB.pressed():
                pageNumber=1
                game+=1
                num +=1 
    #This logic controls the user input from 0-9 for a three digit number
            if thumby.buttonR.pressed():
                place-=1
            if thumby.buttonL.pressed():
                place+=1
            if (thumby.buttonU.pressed() and ones<10 and tens<10 and hundreds< 10 ):
                if place ==0:
                    ones+=1
                elif place ==1:
                    tens+=1
                elif place ==2:
                    hundreds+=1    
            if (thumby.buttonD.pressed() and ones>0 and tens>0 and hundreds>0):
                if place ==0:
                    ones=ones-1
                elif place ==1:
                    tens-=1
                elif place ==2:
                    hundreds-=1    
                 
            #This logic shows the text above the animated background    
            thumby.display.setFont("/lib/font5x7.bin", 5, 7, 1)
            thumby.display.drawText(str(ones), 55,2, 1)
            thumby.display.drawText(str(tens), 45,2, 1)
            thumby.display.drawText(str(hundreds), 35,2, 1)
            #This logic submits the user answer 
            game1.userAnswer= ones+(tens*10)+(hundreds*100)
            game2.userAnswer= isPalindrome(isPalindrome,((ones+(tens*10)+(hundreds*100)) * game2.text))
            game3.userAnswer= ones+(tens*10)+(hundreds*100)
            game4.userAnswer= ones+(tens*10)+(hundreds*100)
            #This logic gives you positive or negative points
            #It also exits the mini game to return to main screen
            if thumby.buttonA.pressed():
                
                if game1.userAnswer == game1.answer:
                    starpet.happy+=1
                    starpet.edu+=1
                    starpet.sad = 0
                    starpet.angry =0
                    starpet.food =0
                    starpet.hyg =0
                    starpet.toy = 0
                    game+=1
                    num +=random.randrange(3) 
                    pageNumber = 1
                elif game2.userAnswer == game2.answer:
                    starpet.happy+=1
                    starpet.edu+=1
                    starpet.sad = 0
                    starpet.angry =0
                    starpet.food =0
                    starpet.hyg =0
                    starpet.toy = 0
                    game+=1
                    num +=1
                    pageNumber = 1 
                elif game3.userAnswer == game3.answer:
                    starpet.happy+=1
                    starpet.edu+=1
                    starpet.sad = 0
                    starpet.angry =0
                    starpet.food =0
                    starpet.hyg =0
                    starpet.toy = 0
                    game+=1
                    num +=1 
                    pageNumber = 1 
                elif game4.userAnswer == game4.answer:
                    starpet.happy+=1
                    starpet.edu+=1
                    starpet.sad = 0
                    starpet.angry =0
                    starpet.food =0
                    starpet.hyg =0
                    starpet.toy = 0
                    game+=1
                    num +=random.randrange(3) 
                    pageNumber = 1 
                else:
                    starpet.angry+=1
                    pageNumber = 1
                    game+=1
                    num +=random.randrange(3) 
            thumby.display.update()
    
    #FOOD PAGE---------------------------------------------
    elif pageNumber==3:
        thumby.display.fill(0)
        Spr = thumby.Sprite(68, 30, foodFrames)
        while (pageNumber ==3):
            thumby.display.drawSprite(Spr)
            Spr.setFrame(Spr.currentFrame+1)
            thumby.display.drawText("Level Up![B]", 0,30, 1)
            if thumby.buttonB.pressed():
                pageNumber=1
                starpet.level+=1
                starpet.happy-=1
                starpet.food+=1
                starpet.toy=0
                starpet.sad =0
                starpet.hyg =0
                if (starpet.food>1):
                    starpet.sick +=1
            thumby.display.update()    
    #FILL BLACK    
   #TOY PAGE---------------------------------------------------------
    elif pageNumber==4:
        Spr= thumby.Sprite(72, 25, chooseFrames)
        toystring = "Angry:"+ str(starpet.angry) + " [A]"
        SprX = thumby.Sprite(72, 8, toyFrames)
        while (pageNumber == 4):
            thumby.display.fill(0)
            Spr.setFrame(Spr.currentFrame+1)
            thumby.display.drawSprite(Spr)
            SprX.setFrame(SprX.currentFrame+1)
            thumby.display.drawSprite(SprX)
            thumby.display.drawText(toystring, 0,30, 1)
            thumby.display.update()
            #CONTROL PAGE NUMBER FROM USER SELECT    
            if time.ticks_ms()%3 ==0 and thumby.buttonA.pressed():
                SprX = thumby.Sprite(31, 25, dogFrames)
                toystring = "Toy Dog[B]"
                thumby.display.update()
            elif time.ticks_ms()%3 ==1 and thumby.buttonA.pressed():
                SprX = thumby.Sprite(31, 25, catFrames)
                toystring = "Toy Cat[B]"
                thumby.display.update()
            elif time.ticks_ms()%3 ==2 and thumby.buttonA.pressed():
                SprX = thumby.Sprite(31, 25, cowFrames)
                toystring = "Toy Cow[B]"
                thumby.display.update()
            if thumby.buttonB.pressed():
                pageNumber=1
                starpet.toy+=1
                starpet.happy+=1
                starpet.angry=0
                starpet.food=0
                starpet.hyg=0
                if (starpet.toy >1):
                    starpet.sad+=1
            thumby.display.update()
    #CARE FOR PET PAGE ------------------------------------------------
    elif pageNumber==5:
        healstring = "Sick:"+ str(starpet.sick) + " [A]" 
        SprX = thumby.Sprite(72, 8, hygFrames) 
        while (pageNumber == 5):
            thumby.display.fill(0)
            thumby.display.drawSprite(SprX)
            SprX.setFrame(SprX.currentFrame+1)
            thumby.display.drawText(healstring, 0,30, 1)
            thumby.display.update()
            #CONTROL PAGE NUMBER FROM USER SELECT    
            if time.ticks_ms()%3 ==0 and thumby.buttonA.pressed():
                thumby.display.fill(0)
                SprX = thumby.Sprite(20, 30, healFrames,30,0)
                healstring = "Medicine[B]"
                thumby.display.update()
            elif time.ticks_ms()%3 ==1 and thumby.buttonA.pressed():
                thumby.display.fill(0)
                SprX = thumby.Sprite(20, 30, bathFrames,30,0)
                healstring = "Give Bath[B]"
                thumby.display.update()
            elif time.ticks_ms()%3 ==2 and thumby.buttonA.pressed():
                thumby.display.fill(0)
                SprX = thumby.Sprite(20, 30, brushFrames,30,0)
                healstring = "Brush Pet[B]"
                thumby.display.update()
            if thumby.buttonB.pressed():
                pageNumber=1
                starpet.sick=0
                starpet.happy+=1
                starpet.hyg+=1
                starpet.toy = 0
                starpet.food = 0
                if (starpet.hyg > 1):
                    starpet.sad +=1
            thumby.display.update()
    #END OF OPTIONS -------------------------------------------------
    else:
        thumby.display.fill(0) 
        thumby.display.update()
    #END OF WHILE LOOP ----------------------------------------------
