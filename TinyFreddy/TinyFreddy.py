
#FNAF
import sys
import gc
gc.collect()
sys.path.insert(0, '/Games/TinyFreddy')
import TFcameras
#import TFjumpscares
import TFbitWav
import thumby
import math
import time
import random
import micropython
thumby.display.setFont("/lib/font5x7.bin",5,7,1)
thumby.display.drawText("Loading",0,0,1)
thumby.display.update()
micropython.mem_info(1)

gamestate = "title1"
thumby.display.setFPS(60)

freddydifficulty = 0
bonniedifficulty = 0
chicadifficulty = 0
foxydifficulty = 0
goldendifficulty = 0
rand = 0
old = 0
night = 5

# BITMAP: width: 6, height: 6
bit_0 = bytearray([0,25,63,59,32,0])

# BITMAP: width: 6, height: 6
bit_1 = bytearray([14,6,36,60,46,0])

spr_fan = thumby.Sprite(6,6,bit_0+bit_1,0,0)


# BITMAP: width: 10, height: 39
bit_0 = bytearray([255,193,194,2,132,4,8,8,16,224,
            255,239,225,188,191,192,255,240,142,255,
            255,131,27,192,22,176,71,127,127,255,
            255,127,126,62,62,3,0,3,0,255,
            127,124,124,126,126,127,127,127,127,127])
# BITMAP: width: 10, height: 39
bit_1 = bytearray([255,193,194,2,196,228,232,8,16,224,
            255,143,241,190,255,255,113,252,31,255,
            255,252,217,179,82,171,23,34,121,255,
            255,175,85,42,5,0,128,0,0,255,
            127,112,120,0,0,0,71,99,96,127])


spr_litDoorL = thumby.Sprite(10,39,bit_0+bit_1,10,10)

# BITMAP: width: 10, height: 39
bit_0 = bytearray([224,16,136,200,132,196,226,194,225,255,
            255,157,56,198,206,56,187,131,255,255,
            255,251,250,120,126,126,127,255,255,255,
            255,191,127,0,255,147,147,34,38,255,
            127,127,127,112,119,116,104,105,105,127])

spr_litDoorR = thumby.Sprite(10,39,bit_0,10,10)

# BITMAP: width: 8, height: 17
bit_0 = bytearray([255,237,242,250,196,180,232,240,
           255,255,255,255,127,127,63,31,
           1,1,0,0,0,0,0,0])
# BITMAP: width: 8, height: 17
bit_1 = bytearray([255,237,18,154,100,20,232,240,
           255,7,128,128,64,71,63,31,
           1,1,0,0,0,0,0,0])

spr_litWindowL = thumby.Sprite(8,17,bit_0+bit_1,10,10)

# BITMAP: width: 8, height: 17
bit_0 = bytearray([240,200,68,132,226,194,177,255,
           31,63,127,127,255,255,255,255,
           0,0,0,0,0,0,1,1])
# BITMAP: width: 8, height: 17
bit1 = bytearray([240,168,244,148,254,150,241,255,
           31,34,87,100,208,164,87,255,
           0,0,0,0,0,0,1,1])

spr_litWindowR = thumby.Sprite(8,14,bit_0+bit_1,10,10)


#DoorCloseAnimationl
if(1):
    # BITMAP: width: 10, height: 39
    bit_0 = bytearray([255,25,18,62,36,76,120,200,144,224,
           255,0,0,0,0,0,0,0,0,255,
           255,0,0,0,0,0,0,0,0,255,
           255,0,0,0,0,0,0,0,0,255,
           127,0,0,0,0,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_1 = bytearray([255,145,34,226,68,204,136,136,16,224,
           255,1,1,3,2,4,7,12,9,255,
           255,0,0,0,0,0,0,0,0,255,
           255,0,0,0,0,0,0,0,0,255,
           127,0,0,0,0,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_2 = bytearray([255,1,2,2,4,4,8,8,16,224,
           255,18,36,60,36,72,120,72,144,255,
           255,0,0,0,0,0,0,0,0,255,
           255,0,0,0,0,0,0,0,0,255,
           127,0,0,0,0,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_3 = bytearray([255,1,2,2,4,4,8,8,16,224,
           255,32,64,192,64,128,128,128,0,255,
           255,1,2,3,2,4,7,4,9,255,
           255,0,0,0,0,0,0,0,0,255,
           127,0,0,0,0,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_4 = bytearray([255,1,2,2,4,12,8,8,16,224,
           255,0,0,0,0,0,0,0,0,255,
           255,100,76,124,76,136,248,200,152,255,
           255,0,0,0,0,0,0,0,0,255,
           127,0,0,0,0,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_5 = bytearray([255,1,2,2,4,12,8,8,16,224,
           255,0,0,0,0,0,0,0,0,255,
           255,128,128,128,128,128,128,128,128,255,
           255,12,9,14,12,9,14,12,9,255,
           127,0,0,0,0,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_6 = bytearray([255,1,2,2,4,12,8,8,16,224,
           255,0,0,0,0,0,0,0,0,255,
           255,0,0,0,0,0,0,0,0,255,
           255,144,48,240,144,152,248,200,152,255,
           127,1,1,1,1,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_7 = bytearray([255,1,2,2,4,12,8,8,16,224,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,128,255,
            127,116,38,46,58,19,23,29,9,127])
            
    # BITMAP: width: 10, height: 39
    bit_8 = bytearray([255,1,2,2,4,12,8,8,16,224,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            127,32,96,112,16,24,56,100,76,127])

spr_lDoorClosed = thumby.Sprite(10,39,bit_0+bit_1+
        bit_2+bit_3+bit_4+bit_5+
        bit_6+bit_7+bit_8,10,10,0)

#DoorCloseAnimationlb
if(1):
    # BITMAP: width: 10, height: 39
    bit_0 = bytearray([255,249,243,255,231,207,255,207,159,255,
            255,255,255,255,255,255,255,255,255,255,
            255,255,255,255,255,255,255,255,255,255,
            255,255,255,255,255,255,255,255,255,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_1 = bytearray([255,145,35,227,71,199,143,143,31,255,
            255,255,255,255,254,252,255,252,249,255,
            255,255,255,255,255,255,255,255,255,255,
            255,255,255,255,255,255,255,255,255,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_2 = bytearray([255,1,3,3,7,7,15,15,31,255,
            255,242,228,252,228,200,248,200,144,255,
            255,255,255,255,255,255,255,255,255,255,
            255,255,255,255,255,255,255,255,255,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_3 = bytearray([255,1,3,3,7,7,15,15,31,255,
           255,32,64,192,64,128,128,128,0,255,
           255,255,254,255,254,252,255,252,249,255,
           255,255,255,255,255,255,255,255,255,255,
           127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_4 = bytearray([255,1,3,3,7,7,15,15,31,255,
            255,0,0,0,0,0,0,0,0,255,
            255,228,204,252,204,136,248,200,152,255,
            255,255,255,255,255,255,255,255,255,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_5 = bytearray([255,1,3,3,7,7,15,15,31,255,
            255,0,0,0,0,0,0,0,0,255,
            255,128,128,128,128,128,128,128,128,255,
            255,252,249,254,252,249,254,252,249,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_6 = bytearray([255,1,3,3,7,7,15,15,31,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            255,144,48,240,144,152,248,200,152,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_7 = bytearray([255,1,3,3,7,7,15,15,31,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,128,255,
            127,116,102,110,122,115,119,125,121,127])
            
    # BITMAP: width: 10, height: 39
    bit_8 = bytearray([255,1,3,3,7,7,15,15,31,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            127,32,96,112,16,24,56,100,76,127])

spr_lDoorClosedw = thumby.Sprite(10,39,bit_0+bit_1+
        bit_2+bit_3+bit_4+bit_5+
        bit_6+bit_7+bit_8,10,10,1)

#DoorCloseAnimationr
if(1):
    # BITMAP: width: 10, height: 39
    bit_0 = bytearray([224,144,200,120,76,36,62,18,25,255,
           255,0,0,0,0,0,0,0,0,255,
           255,0,0,0,0,0,0,0,0,255,
           255,0,0,0,0,0,0,0,0,255,
           127,0,0,0,0,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_1 = bytearray([224,16,136,136,196,68,226,34,145,255,
           255,9,12,7,4,2,3,1,1,255,
           255,0,0,0,0,0,0,0,0,255,
           255,0,0,0,0,0,0,0,0,255,
           127,0,0,0,0,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_2 = bytearray([224,16,8,8,4,4,2,2,1,255,
           255,144,72,120,72,36,60,36,18,255,
           255,0,0,0,0,0,0,0,0,255,
           255,0,0,0,0,0,0,0,0,255,
           127,0,0,0,0,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_3 = bytearray([224,16,8,8,4,4,2,2,1,255,
           255,0,128,128,128,64,192,64,32,255,
           255,9,4,7,4,2,3,2,1,255,
           255,0,0,0,0,0,0,0,0,255,
           127,0,0,0,0,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_4 = bytearray([224,16,8,8,4,4,2,2,1,255,
            255,0,0,0,0,0,0,0,0,255,
            255,152,200,248,136,76,124,76,100,255,
            255,0,0,0,0,0,0,0,0,255,
            127,0,0,0,0,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_5 = bytearray([224,16,8,8,4,4,2,2,1,255,
            255,0,0,0,0,0,0,0,0,255,
            255,128,128,128,128,128,128,128,128,255,
            255,9,12,14,9,12,14,9,12,255,
            127,0,0,0,0,0,0,0,0,127])
    
    # BITMAP: width: 10, height: 39
    bit_6 = bytearray([224,16,8,8,4,4,2,2,1,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            255,152,200,248,152,144,240,48,144,255,
            127,0,0,0,0,1,1,1,1,127])
    
    # BITMAP: width: 10, height: 39
    bit_7 = bytearray([224,16,8,8,4,4,2,2,1,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            255,128,0,0,0,0,0,0,0,255,
            127,9,29,23,19,58,46,38,116,127])
            
    # BITMAP: width: 10, height: 39
    bit_8 = bytearray([224,16,8,8,4,4,2,2,1,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            127,100,76,120,24,16,48,96,32,127])

spr_rDoorClosed = thumby.Sprite(10,39,bit_0+bit_1+
        bit_2+bit_3+bit_4+bit_5+
        bit_6+bit_7+bit_8,10,10,0)

#DoorCloseAnimationrb
if(1):
    # BITMAP: width: 10, height: 39
    bit_0 = bytearray([255,159,207,255,207,231,255,243,249,255,
            255,255,255,255,255,255,255,255,255,255,
            255,255,255,255,255,255,255,255,255,255,
            255,255,255,255,255,255,255,255,255,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_1 = bytearray([255,31,143,143,199,71,227,35,145,255,
            255,249,252,255,252,254,255,255,255,255,
            255,255,255,255,255,255,255,255,255,255,
            255,255,255,255,255,255,255,255,255,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_2 = bytearray([255,31,15,15,7,7,3,3,1,255,
            255,144,200,248,200,228,252,228,242,255,
            255,255,255,255,255,255,255,255,255,255,
            255,255,255,255,255,255,255,255,255,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_3 = bytearray([255,31,15,15,7,7,3,3,1,255,
            255,0,128,128,128,64,192,64,32,255,
            255,249,252,255,252,254,255,254,255,255,
            255,255,255,255,255,255,255,255,255,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_4 = bytearray([255,31,15,15,7,7,3,3,1,255,
            255,0,0,0,0,0,0,0,0,255,
            255,152,200,248,136,204,252,204,228,255,
            255,255,255,255,255,255,255,255,255,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_5 = bytearray([255,31,15,15,7,7,3,3,1,255,
            255,0,0,0,0,0,0,0,0,255,
            255,128,128,128,128,128,128,128,128,255,
            255,249,252,254,249,252,254,249,252,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_6 = bytearray([255,31,15,15,7,7,3,3,1,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            255,152,200,248,24,144,240,48,144,255,
            127,127,127,127,127,127,127,127,127,127])
    
    # BITMAP: width: 10, height: 39
    bit_7 = bytearray([255,31,15,15,7,7,3,3,1,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            255,128,0,0,0,0,0,0,0,255,
            127,121,125,119,115,122,110,102,116,127])
            
    # BITMAP: width: 10, height: 39
    bit_8 = bytearray([255,31,15,15,7,7,3,3,1,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            255,0,0,0,0,0,0,0,0,255,
            127,100,76,120,24,16,48,96,32,127])

spr_rDoorClosedw = thumby.Sprite(10,39,bit_0+bit_1+
        bit_2+bit_3+bit_4+bit_5+
        bit_6+bit_7+bit_8,10,10,1)

#CamUpa
# BITMAP: width: 72, height: 40
#bit_0 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        128,64,64,64,64,64,64,32,32,32,32,32,32,32,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,32,32,32,32,32,32,32,64,64,64,64,64,64,128])
#
## BITMAP: width: 72, height: 40
#bit_1 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        128,64,64,32,32,16,16,16,8,8,4,4,4,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,4,4,4,8,8,16,16,16,32,32,64,64,128])
#
## BITMAP: width: 72, height: 40
#bit_2 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,0,0,0,128,64,64,32,16,16,8,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8,16,16,32,64,64,128,0,0,0,0,0,0,0,0,0,0,0,
#        128,64,32,16,16,8,4,4,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,4,4,8,16,16,32,64,128])
#
## BITMAP: width: 72, height: 40
#bit_3 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,0,0,0,0,0,192,32,16,8,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8,16,32,192,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,128,64,32,24,4,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,4,24,32,64,128,0,0,0,0,0,0,
#        128,96,16,8,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,8,16,96,128])
#
## BITMAP: width: 72, height: 40
#bit_4 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,0,0,0,0,128,96,24,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,24,96,128,0,0,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,0,128,96,24,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,24,96,128,0,0,0,0,0,0,0,0,
#        0,0,0,0,128,96,24,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,24,96,128,0,0,0,0,
#        128,96,24,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,24,96,128])
#
# BITMAP: width: 72, height: 40
#bit_5 = bytearray([0,0,0,0,0,0,0,0,0,0,224,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,224,0,0,0,0,0,0,0,0,0,0,
#        0,0,0,0,0,0,0,128,112,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,112,128,0,0,0,0,0,0,0,
#        0,0,0,0,0,192,56,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,56,192,0,0,0,0,0,
#        0,0,0,224,28,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,28,224,0,0,0,
#        128,112,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,112,128])
#
## BITMAP: width: 72, height: 40
#bit_6 = bytearray([0,0,254,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,254,0,0,
#        0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,
#        0,224,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,224,0,
#        0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,
#        128,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,128])

spr_camup = thumby.Sprite(72,40,'/Games/TinyFreddy/CamFlip.bin',0,0,0)

#CamUpb
# BITMAP: width: 72, height: 40
#bit_0 = bytearray([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,127,127,127,127,127,127,63,63,63,63,63,63,63,31,31,31,31,31,31,31,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,31,31,31,31,31,31,31,63,63,63,63,63,63,63,127,127,127,127,127,127,255])
#
## BITMAP: width: 72, height: 40
#bit_1 = bytearray([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,127,127,63,63,31,31,31,15,15,7,7,7,3,3,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,3,3,7,7,7,15,15,31,31,31,63,63,127,127,255])
#
## BITMAP: width: 72, height: 40
#bit_2 = bytearray([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,255,255,255,127,127,63,31,31,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,15,31,31,63,127,127,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,127,63,31,31,15,7,7,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,7,7,15,31,31,63,127,255])
#
## BITMAP: width: 72, height: 40
#bit_3 = bytearray([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,31,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,15,31,63,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,127,63,31,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,7,31,63,127,255,255,255,255,255,255,255,
#        255,127,31,15,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,7,15,31,127,255])
#
## BITMAP: width: 72, height: 40
#bit_4 = bytearray([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,255,255,255,255,127,31,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,31,127,255,255,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,255,127,31,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,31,127,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,127,31,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,31,127,255,255,255,255,255,
#        255,127,31,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,31,127,255])
#
## BITMAP: width: 72, height: 40
#bit_5 = bytearray([255,255,255,255,255,255,255,255,255,255,255,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,255,255,255,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,255,255,127,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,127,255,255,255,255,255,255,255,255,
#        255,255,255,255,255,255,63,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,63,255,255,255,255,255,255,
#        255,255,255,255,31,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,31,255,255,255,255,
#        255,127,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,127,255])
#
## BITMAP: width: 72, height: 40
#bit_6 = bytearray([255,255,255,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,255,255,255,
#        255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,
#        255,255,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,255,255,
#        255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,
#        255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,255])

spr_camupw = thumby.Sprite(72,40,'/Games/TinyFreddy/CamFlip.bin',0,0,1)

def title(warning):
    
    TFbitWav.stopsound()
    TFbitWav.loadIntro()
    
    global night
    
    # BITMAP: width: 72, height: 40
    #bit_0 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,48,24,8,12,0,0,0,0,0,0,128,192,224,240,255,255,255,255,255,255,248,248,248,0,0,0,0,0,0,0,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,15,28,24,22,20,0,0,0,240,254,255,255,255,255,59,217,201,201,201,217,249,249,57,0,0,192,192,192,192,192,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,254,255,255,255,255,255,255,255,254,253,255,255,248,252,248,176,0,0,0,0,0,3,3,3,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,7,255,255,247,239,239,255,255,191,255,239,191,127,98,0,16,72,96,0,96,32,32,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,192,224,240,240,248,248,248,124,24,0,0,4,30,62,63,127,127,64,0,195,231,255,255,239,31,31,31,31,31,30,80,16,16,0,0,0,0,0,0,0,0,0,0])
    #
    ## BITMAP: width: 72, height: 40
    #bit_1 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,96,48,176,240,240,240,240,96,64,0,192,224,224,252,255,255,255,255,255,255,252,252,252,0,0,0,0,0,0,0,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,28,58,119,127,63,31,25,8,252,255,255,255,254,252,246,246,246,214,159,31,159,159,134,144,56,56,120,112,32,64,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,252,254,255,255,255,255,255,255,255,255,255,127,127,192,127,127,127,255,63,22,0,0,0,0,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,7,31,255,255,193,128,224,243,194,222,214,254,222,154,58,250,238,176,242,226,192,224,192,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,192,224,240,240,248,248,248,124,24,0,0,4,30,30,63,127,127,64,3,207,255,255,255,255,127,63,63,63,60,32,103,63,63,31,7,3,3,3,0,0,0,0,0])
    #
    ## BITMAP: width: 72, height: 40
    #bit_2 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,192,192,224,224,224,192,0,128,192,224,252,255,255,255,255,255,252,252,252,252,248,248,240,0,0,0,0,12,30,127,255,255,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,123,255,255,255,255,127,255,255,115,251,251,255,255,127,127,127,127,247,254,254,62,126,126,124,60,0,0,0,0,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,240,248,255,255,254,255,254,252,252,254,254,254,255,255,255,255,130,0,0,0,0,0,0,0,0,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,7,15,143,199,135,247,255,255,255,255,255,251,251,241,249,249,252,248,56,12,0,0,0,0,0,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,192,224,240,240,248,248,248,124,28,0,0,4,30,31,63,127,127,111,31,223,255,255,255,255,95,31,31,31,15,15,7,3,0,0,0,0,0,0,0,0,0,0,0])
    #
    ## BITMAP: width: 72, height: 40
    #bit_3 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,128,0,0,0,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,252,252,126,254,158,62,254,254,255,255,191,255,111,15,15,15,0,0,0,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,27,251,249,253,252,252,249,185,185,185,60,60,62,30,62,2,0,0,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,231,247,255,255,247,255,159,15,7,7,99,129,0,0,0,0,0,0,0,0,
    #       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,192,224,240,240,248,248,248,60,24,0,0,4,30,31,63,127,127,66,0,192,224,240,240,240,68,2,0,0,0,7,64,0,15,2,0,3,0,0,0,0,0,0,0])
    
    spr_office = thumby.Sprite(72,40,"/Games/TinyFreddy/Title.bin",0,0)
    
    # BITMAP: width: 72, height: 40
    bit_0 = bytearray([0,0,248,255,253,255,255,255,255,255,254,255,255,255,255,7,247,39,247,7,246,182,151,7,246,135,135,6,246,87,39,6,7,7,247,71,247,6,230,87,230,6,246,22,230,6,22,246,22,6,247,183,151,7,247,151,103,3,255,151,183,255,191,183,183,159,191,183,247,55,191,255,
           0,120,255,125,63,255,253,255,251,189,219,123,254,255,255,0,254,30,30,30,30,22,30,62,126,126,62,62,62,62,62,62,30,22,22,30,30,22,22,246,22,126,30,246,30,14,94,246,22,126,22,246,30,94,30,254,254,0,255,89,109,237,201,73,79,93,221,73,205,251,201,201,
           128,203,78,48,182,187,229,165,250,249,132,190,255,255,255,194,255,0,0,8,48,24,12,96,254,252,222,255,124,220,248,252,28,16,8,0,0,0,0,255,223,223,220,223,221,184,188,159,220,159,252,159,156,158,189,255,255,0,222,16,144,150,222,148,157,150,214,215,151,150,212,253,
           239,247,255,227,255,251,182,255,252,247,127,95,255,255,255,253,255,240,240,112,112,120,0,160,204,205,221,217,221,221,237,248,192,128,0,0,0,1,0,255,255,119,37,173,173,173,174,172,164,164,102,102,100,119,254,255,255,0,255,0,64,108,109,72,221,102,124,125,108,92,252,15,
           127,127,127,127,127,127,127,255,255,127,127,255,255,127,127,237,255,252,237,236,236,236,236,253,125,109,109,109,109,125,237,237,237,237,237,236,236,236,172,223,239,239,239,239,239,207,239,239,239,207,207,239,255,207,207,239,239,224,255,240,242,190,183,54,190,126,246,182,179,250,63,0])
    
    menu = 1
    selection = 0
    selectiony = 0
    selectionynext = 0
    
    thumby.display.setFont("/lib/font5x7.bin", 5, 7, 1)
    
    frame = 0
    nextstate = "exit"
    
    while(menu == 1):
        
        if(selectiony == selectionynext):
            if(thumby.buttonD.justPressed()):
                selection += (selection < 5)
            if(thumby.buttonU.justPressed()):
                selection -= (selection > 0)
        
        if(selection == 0):
            selectionynext = 0
        elif(selection == 1):
            selectionynext = 40
        elif(selection == 2):
            selectionynext = 48
        elif(selection == 3):
            selectionynext = 56
        elif(selection == 4):
            selectionynext = 64
        elif(selection == 5):
            selectionynext = 72
        
        if(selectiony<selectionynext):
            selectiony += 2
        elif(selectiony>selectionynext):
            selectiony -= 2
        
        if(thumby.buttonA.justPressed()):
            if(selection == 5):
                menu = 0
            elif(selection == 1):
                night = 1
                nextstate = "game"
                menu = 0
            elif(selection == 4):
                nextstate = "game"
                menu = 2
            elif(selection == 2):
                nextstate = "game"
                menu = 0
            elif(selection == 3):
                night = 6
                nextstate = "game"
                menu = 0
        
        frame += 1
        frame % 30030
        
        thumby.display.fill(0)
        
        rand = random.randint(0,30)
        if(rand<28):
            spr_office.setFrame(0)
        else:
            spr_office.setFrame(rand-27)
        
        thumby.display.drawSprite(spr_office)
        
        thumby.display.setFont("/lib/font5x7.bin",5,7,1)
        
        if(selectiony>39):
            thumby.display.drawText(">",0,17,1)
        thumby.display.drawText("Five",0,0-selectiony,1)
        thumby.display.drawText("Nights",0,8-selectiony,1)
        thumby.display.drawText("At",0,16-selectiony,1)
        thumby.display.drawText("Freddys",0,24-selectiony,1)
        thumby.display.drawText("New",6,57-selectiony,1)
        thumby.display.drawText("Cont:"+str(night),6,65-selectiony,1)
        thumby.display.drawText("Night6",6,73-selectiony,1)
        thumby.display.drawText("Custom",6,81-selectiony,1)
        thumby.display.drawText("Exit",6,89-selectiony,1)
        
        if(selectiony == 0):
            thumby.display.drawText("VVVV",2,33,1)
        
        TFcameras.static(frame)
        
        TFbitWav.soundupdate()
        
        thumby.display.update()
            
    
    if(selection == 1):
        menu = 1
        moveleft = 72
        night = 1
        while(menu == 1):
            moveleft -= 1
            if(moveleft < 0):
                moveleft = 0
            thumby.display.fill(0)
            spr_office.x = moveleft-72
            rand = random.randint(0,30)
            if(rand<28):
                spr_office.setFrame(0)
            else:
                spr_office.setFrame(rand-27)
            thumby.display.drawSprite(spr_office)
            spr_office.setFrame(4)
            spr_office.x = moveleft
            thumby.display.drawSprite(spr_office)
            #thumby.display.drawSprite(bit_0,moveleft,0,72,40,0,0,0)
            if(thumby.buttonA.justPressed()):
                menu = 0
            if(thumby.buttonB.justPressed()):
                title(0)
            TFbitWav.soundupdate()
            frame += 1
            frame % 30030
            TFcameras.static(frame)
            thumby.display.update()
    
    if(menu == 2):
        global freddydifficulty
        global bonniedifficulty
        global chicadifficulty
        global foxydifficulty
        global goldendifficulty
        night = 7
        # BITMAP: width: 16, height: 16
        bit_0 = bytearray([0,0,12,140,248,216,124,254,223,255,254,252,248,252,12,0,
            240,224,224,243,155,219,251,251,251,223,221,255,241,240,24,240])
        # BITMAP: width: 16, height: 16
        bit_1 = bytearray([0,0,0,224,247,255,251,248,191,247,48,64,0,0,0,0,
            224,224,224,39,239,255,251,251,251,243,243,243,227,224,192,128])
        # BITMAP: width: 16, height: 16
        bit_2 = bytearray([0,0,0,224,240,89,90,255,95,90,249,240,224,0,0,0,
            252,252,248,119,239,223,217,209,209,217,223,239,231,224,224,192])
        # BITMAP: width: 16, height: 16
        bit_3 = bytearray([255,255,255,255,128,222,156,156,254,188,248,252,158,31,255,255,
            255,255,255,247,241,255,183,178,243,251,79,227,227,195,255,255])
        # BITMAP: width: 16, height: 16
        bit_4 = bytearray([14,10,236,248,56,188,59,252,255,63,188,56,248,236,10,14,
            0,0,111,223,254,222,254,211,211,254,222,254,223,111,0,0])
        thumby.display.setFont("/lib/font3x5.bin", 3, 5, 1)
        selection = 0
        while(menu == 2):
            if(thumby.buttonR.justPressed()):
                selection += (selection < 3)
            if(thumby.buttonL.justPressed()):
                selection -= (selection > -1)
            if(thumby.buttonU.justPressed()):
                if(selection == -1):
                    goldendifficulty += (goldendifficulty < 20)
                if(selection == 0):
                    freddydifficulty += (freddydifficulty < 20)
                if(selection == 1):
                    bonniedifficulty += (bonniedifficulty < 20)
                if(selection == 2):
                    chicadifficulty += (chicadifficulty < 20)
                if(selection == 3):
                    foxydifficulty += (foxydifficulty < 20)
            if(thumby.buttonD.justPressed()):
                if(selection == -1):
                    goldendifficulty -= (goldendifficulty > 0)
                if(selection == 0):
                    freddydifficulty -= (freddydifficulty > 0)
                if(selection == 1):
                    bonniedifficulty -= (bonniedifficulty > 0)
                if(selection == 2):
                    chicadifficulty -= (chicadifficulty > 0)
                if(selection == 3):
                    foxydifficulty -= (foxydifficulty > 0)
            if(thumby.buttonA.justPressed()):
                menu = 0
                nextstate = "game"
            if(thumby.buttonB.justPressed()):
                menu = 0
                nextstate = "title0"
            thumby.display.fill(0)
            if(selection == -1):
                thumby.display.blit(bit_4,1,6,16,16,-1,0,0)
            else:
                thumby.display.blit(bit_0,1,6,16,16,-1,0,0)
            thumby.display.blit(bit_1,19,6,16,16,-1,0,0)
            thumby.display.blit(bit_2,37,6,16,16,-1,0,0)
            thumby.display.blit(bit_3,55,6,16,16,-1,0,0)
            thumby.display.drawText("Custom Night",12,0,1)
            thumby.display.drawText("Fred",1,23,1)
            if(selection == -1):
                thumby.display.drawText(str(goldendifficulty),5,29,1)
            else:
                thumby.display.drawText(str(freddydifficulty),5,29,1)
            thumby.display.drawText("Bonn",19,23,1)
            thumby.display.drawText(str(bonniedifficulty),23,29,1)
            thumby.display.drawText("Chic",37,23,1)
            thumby.display.drawText(str(chicadifficulty),41,29,1)
            thumby.display.drawText("Foxy",55,23,1)
            thumby.display.drawText(str(foxydifficulty),59,29,1)
            if(selection == -1):
                thumby.display.drawText("<  >",1,29,1)
            else:
                thumby.display.drawText("<  >",1+(18*selection),29,1)
            thumby.display.drawText("A:Start B:Back",8,35,1)
            TFbitWav.soundupdate()
            thumby.display.update()
    
    return nextstate

def game():
    
    
    done = 300
    thumby.display.setFont("/lib/font8x8.bin", 8, 8, 1)
    
    TFbitWav.stopsound()
    global night
    
    while(done > 0):
        done -= 1
        thumby.display.fill(0)
        thumby.display.drawText("Night "+str(night),4,16,1)
        thumby.display.update()
    
    # BITMAP: width: 72, height: 40
    #bit_0 = bytearray([0,0,0,0,0,254,2,4,4,8,8,16,16,32,192,0,0,0,0,0,0,0,56,40,48,48,56,48,48,56,48,48,16,48,48,56,16,48,48,172,128,128,128,0,0,2,6,6,6,134,134,134,134,134,134,2,0,0,0,128,128,128,128,128,0,0,0,0,0,0,0,0,
    #        0,0,0,0,224,255,0,0,0,0,0,0,0,0,255,0,255,1,2,2,4,4,8,240,0,0,0,0,0,0,0,56,60,252,252,158,254,126,254,254,254,254,252,60,124,0,252,252,255,255,255,255,255,31,63,127,127,127,255,255,255,255,15,47,63,60,8,0,0,0,0,0,
    #        0,0,0,0,7,255,0,0,0,0,0,0,0,0,255,0,255,0,128,128,64,64,32,31,0,0,0,0,0,0,16,0,0,0,0,0,0,0,3,27,16,16,60,62,62,48,49,49,49,17,0,0,0,0,0,0,1,32,32,32,32,32,32,0,1,1,0,0,0,16,0,0,
    #        0,0,0,0,48,255,0,0,0,0,0,0,0,0,255,240,113,241,224,252,220,56,126,62,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    #        240,120,192,224,224,255,0,0,0,0,0,0,0,0,255,131,135,195,192,193,200,204,204,204,77,77,45,45,61,53,50,50,178,178,210,202,204,205,205,205,205,205,45,51,50,50,50,50,50,50,205,205,205,205,205,205,205,202,178,50,50,50,50,50,52,60,44,204,204,204,204,206])
    #
    ## BITMAP: width: 72, height: 40
    #bit_1 = bytearray([0,0,0,0,0,0,0,0,0,0,0,128,128,128,128,0,0,2,6,6,6,134,134,134,134,134,134,2,0,0,0,128,128,128,128,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,32,16,16,8,8,4,4,2,254,0,0,0,0,
    #        0,0,0,56,60,252,252,158,254,126,254,254,254,254,252,60,124,0,252,252,255,255,255,255,255,31,63,127,127,127,255,255,255,255,15,47,63,60,8,0,0,0,0,0,0,0,0,0,240,8,4,4,2,2,1,255,0,0,255,0,0,0,0,0,0,0,0,255,0,0,0,0,
    #        0,0,16,0,0,0,0,0,0,0,3,27,16,16,60,62,62,48,49,49,49,17,0,0,0,0,0,0,1,32,32,32,32,32,32,0,1,1,0,0,0,16,0,0,0,0,0,0,31,32,64,64,128,128,0,255,0,0,255,0,0,0,0,0,0,0,0,255,0,0,0,0,
    #        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,62,126,56,252,220,96,241,49,240,128,255,0,0,0,0,0,0,0,0,255,0,0,0,0,
    #        49,51,50,50,178,242,210,202,204,205,205,205,205,205,109,51,50,50,50,50,50,50,205,205,205,205,205,205,205,202,178,50,50,50,50,50,52,60,44,12,204,204,204,202,202,210,210,242,178,50,48,48,49,48,35,7,7,7,255,0,0,0,0,0,0,0,0,255,240,224,224,248])
    #
    ## BITMAP: width: 72, height: 40
    #bit_2 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,40,84,8,0,0,144,168,80,170,85,42,21,10,4,42,84,42,84,0,84,42,5,0,0,8,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,16,32,0,0,1,16,0,0,0,0,0,0,0,0,32,0,32,0,0,0,0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,48,48,96,200,204,16,38,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    #           0,0,0,0,64,0,0,0,0,0,0,0,0,0,3,1,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
    #
    ## BITMAP: width: 72, height: 40
    #bit_3 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,130,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,0,0,0,4,8,56,124,12,0,0,144,248,248,255,127,63,63,31,12,126,126,126,126,80,124,126,15,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,48,32,0,1,1,17,0,0,0,0,0,0,0,0,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,38,24,76,200,96,96,48,32,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,1,0,0,0,0,0,0,0,0,0,0,96,0,0,0])
    
    spr_office = thumby.Sprite(100,40,"/Games/TinyFreddy/Office.bin",0,0)
    
    cam = 0
    camstate = [0,0,0,0,0,0,0,0,0,0,0]
    camstatemax = [7,6,5,2,4,2,4,3,4,1,4]
    camto = [[4,8,1,8],
            [0,2,3,10],
            [8,10,5,1],
            [1,5,4,6],
            [3,7,0,7],
            [2,9,8,3],
            [1,3,7,9],
            [6,4,0,4],
            [5,0,2,5],
            [10,6,10,5],
            [9,1,9,2]]
    freevar = [0,0,0,0,0]
    
    hud = 1
    hudy = 0
    scrollx = 0
    leftDoorLit = 0
    rightDoorLit = 0
    leftDoorClosed = 0
    rightDoorClosed = 0
    camUp = 0
    camMode = 0
    frame = 0
    am = 0
    power = 99
    powerusage = 0
    powerout = 0
    freddylocation = 0
    bonnielocation = 0
    chicalocation = 0
    foxylocation = 0
    global freddydifficulty
    global bonniedifficulty
    global chicadifficulty
    global foxydifficulty
    global goldendifficulty
    goldenappear = 0
    goldendelay = 0
    bstinger = 0
    cstinger = 0
    bt0a = time.ticks_ms()
    bt0b = bt0a
    bdelay = -1
    ct0a = bt0a
    ct0b = bt0a
    cdelay = -1
    ft0a = bt0a
    ft0b = bt0a
    fdelay = -1
    fmoving = 0
    freddycamnums = [0,1,10,9,6,7]
    drawFreddy = 0
    pt0a = bt0a
    pt0b = bt0a
    pdelay = -1
    foxydrain = 0
    foxyframe = 0
    foxytimer = 1000
    
    thumby.display.setFont("/lib/font3x5.bin", 3, 5, 1)
    
    t0a = time.ticks_ms()
    t0b = t0a
    t0 = 0
    
    tpa = time.ticks_ms()
    tpb = time.ticks_ms()
    tpc = 0
    tp = 0
    fail = 0
    jumpnum = 0
    maxloop = 0
    
    if(night == 1):
        freddydifficulty = 0
        bonniedifficulty = 0
        chicadifficulty = 0
        foxydifficulty = 0
        goldendifficulty = 0
    if(night == 2):
        freddydifficulty = 0
        bonniedifficulty = 3
        chicadifficulty = 1
        foxydifficulty = 1
        goldendifficulty = 0
    if(night == 3):
        freddydifficulty = 0
        bonniedifficulty = 0
        chicadifficulty = 5
        foxydifficulty = 2
        goldendifficulty = 0
    if(night == 4):
        freddydifficulty = 1
        bonniedifficulty = 2
        chicadifficulty = 4
        foxydifficulty = 6
        goldendifficulty = 0
    if(night == 5):
        freddydifficulty = 3
        bonniedifficulty = 5
        chicadifficulty = 7
        foxydifficulty = 5
        goldendifficulty = 1
    if(night == 6):
        freddydifficulty = 4
        bonniedifficulty = 10
        chicadifficulty = 12
        foxydifficulty = 16
        goldendifficulty = 4
    
    while((am != 6)&(fail == 0)):
        t0b = time.ticks_ms()
        t0 = t0b-t0a
        #animatronicLocker
        if(power > -1):
            bt0a = time.ticks_ms()
            if(bonnielocation < 7):
                if((bt0a-bt0b)>=4970):
                    if(random.randint(1,20)<(bonniedifficulty+1)):
                        if((bonnielocation == 0)|(bonnielocation == 1)|(bonnielocation == 3)):
                            bonnielocation += random.randint(1,2)
                        elif((bonnielocation == 2)|(bonnielocation == 5)):
                            bonnielocation += random.randint(0,1)
                            bonnielocation -= (bonnielocation==2)
                        elif(bonnielocation == 4):
                            bonnielocation += random.randint(0,1)
                            bonnielocation += (bonnielocation==5)-(bonnielocation==4)
                        elif(bonnielocation == 6):
                            if(leftDoorClosed):
                                bonnielocation = 1
                            else:
                                bonnielocation = 7
                                bdelay = camUp
                            bstinger = 0
                    bt0a = time.ticks_ms()
                    bt0b = time.ticks_ms()
            else:
                if(bdelay == 0)&(camUp == 1):
                    bdelay = 1
                    bt0b = time.ticks_ms()
                if(bdelay == 1)&(camUp == 0):
                    jumpnum = 0
                    fail = 1
                bt0b = time.ticks_ms()
                if((bt0a-bt0b)>=30000):
                    jumpnum = 0
                    fail = 1
            ct0a = time.ticks_ms()
            if(chicalocation < 7):
                if((ct0a-ct0b)>=4980):
                    if(random.randint(1,20)<(chicadifficulty+1)):
                        if(chicalocation == 0):
                            chicalocation += 1
                        elif((chicalocation == 1)|(chicalocation == 2)):
                            chicalocation += random.randint(1,2)
                        elif((chicalocation == 3)|(chicalocation == 5)):
                            chicalocation += random.randint(0,1)
                            chicalocation -= (chicalocation==3)
                        elif(chicalocation == 4):
                            chicalocation += random.randint(0,1)
                            chicalocation -= (chicalocation==4)*3
                        elif(chicalocation == 6):
                            if(rightDoorClosed):
                                chicalocation = 4
                            else:
                                chicalocation = 7
                                cdelay = camUp
                            cstinger = 0
                    ct0a = time.ticks_ms()
                    ct0b = time.ticks_ms()
            else:
                if(cdelay == 0)&(camUp == 1):
                    cdelay = 1
                    ct0b = time.ticks_ms()
                if(cdelay == 1)&(camUp == 0):
                    jumpnum = 1
                    fail = 1
                ct0b = time.ticks_ms()
                if((ct0a-ct0b)>=30000):
                    jumpnum = 1
                    fail = 1
            ft0a = time.ticks_ms()
            if((ft0a-ft0b)>=3520):
                if(random.randint(1,20)<(freddydifficulty+1)):
                    if((freddylocation < 5)):
                        fmoving = 1
                        fdelay = time.ticks_ms()
                    elif(freddylocation == 5):
                        if((rightDoorClosed)|((not(camUp < 2))&(cam == 7))|(camUp < 2)):
                            if(random.randint(0,14) == 0):
                                freddylocation = 4
                        else:
                            freddylocation = 6
                    elif(freddylocation == 6):
                        if(camUp == 0):
                            if(random.randint(0,1)==1):
                                jumpnum = 2
                                fail = 1
                ft0a = time.ticks_ms()
                ft0b = time.ticks_ms()
            if(fmoving == 1):
                if((freddycamnums[freddylocation] == cam)&(camUp > 0)):
                    fdelay = time.ticks_ms()
                else:
                    if((ft0a-fdelay) >= (11000-(freddydifficulty*500))):
                        freddylocation += 1
                        fmoving = 0
                        TFbitWav.loadDeepLaugh()
            pt0a = time.ticks_ms()
            if(not(camUp == 0)):
                pdelay = time.ticks_ms()
                foxytimer = random.randint(1000,16000)
            if(foxylocation < 3):
                if((pt0a-pt0b)>=5010):
                    if(((pt0a - pdelay)>foxytimer)):
                        if(random.randint(1,20)<(foxydifficulty+1)):
                            foxylocation += 1
                            if(foxylocation == 3):
                                pdelay = time.ticks_ms()+25000
                                foxyframe = 0
                    pt0a = time.ticks_ms()
                    pt0b = time.ticks_ms()
            else:
                if(((pdelay-pt0a)<=0)&(foxyframe == 0)):
                    foxyframe = 1
            if(goldenappear == 1):
                gt0a = time.ticks_ms()
                if((gt0a - goldendelay)>=5000-(4000*(goldendifficulty/20))):
                    jumpnum = 5
                    fail = 1
        else:
            # BITMAP: width: 8, height: 8
            bit_0 = bytearray([0,66,172,106,55,106,172,66])
            if(powerout == 0):
                powerout = 1
                maxloop = 0
                ft0b = time.ticks_ms()
                freddylocation = 0
            ft0a = time.ticks_ms()
            if(freddylocation == 0):
                if((ft0a-ft0b)>=5000):
                    ft0b = time.ticks_ms()
                    maxloop += 1
                    if((random.randint(0,3) == 0)|(maxloop > 2)):
                        freddylocation = 1
                        TFbitWav.loadToreador()
                        maxloop = 0
            if(freddylocation == 1):
                fmoving += 1
                if(fmoving > 19):
                    fmoving = 0
                if(fmoving < 10):
                    drawFreddy = 1
                else:
                    drawFreddy = 0
                if((ft0a-ft0b)>=5000):
                    maxloop += 1
                    ft0b = time.ticks_ms()
                    if((random.randint(0,3) == 0)|(maxloop > 2)):
                        freddylocation = 2
                        TFbitWav.stopsound()
            if(freddylocation == 2):
                if((ft0a-ft0b)>=2000):
                    ft0b = time.ticks_ms()
                    if(random.randint(0,4) == 0):
                        jumpnum = 4
                        fail = 1
            
        if(camMode == 0):
            if((thumby.buttonD.justPressed())):
                camUp = (camUp==0)
                if(camUp == 0):
                    if((random.randint(0,100)<(goldendifficulty*2))|(goldenappear == 2)):
                        goldenappear = 1-(goldenappear == 2)
                        goldendelay = time.ticks_ms()
                        if(goldenappear == 1):
                            TFbitWav.loadLaugh()
                leftDoorLit = 0
                rightDoorLit = 0
            if(thumby.buttonU.justPressed()):
                hud = (hud+1)%2
        
        if(hudy < 6)and(hud == 1):
            hudy += 1
        
        if(hudy > 0)and(hud == 0):
            hudy -= 1
        
        if(camUp == 0):
            scrollx += ((thumby.buttonR.pressed())&(scrollx<28))-((thumby.buttonL.pressed())&(scrollx>0))
            thumby.buttonR.justPressed()
            thumby.buttonL.justPressed()
            if(power > -1):
                if(thumby.buttonA.justPressed()):
                    if(scrollx<15):
                        leftDoorClosed = ((leftDoorClosed+1)%2)
                        TFbitWav.loadDoor()
                    else:
                        rightDoorClosed = ((rightDoorClosed+1)%2)
                        TFbitWav.loadDoor()
                
                if(thumby.buttonB.justPressed()):
                    if(scrollx<15):
                        leftDoorLit = ((leftDoorLit+1)%2)
                        rightDoorLit = 0
                    else:
                        rightDoorLit = ((rightDoorLit+1)%2)
                        leftDoorLit = 0
            
        else:
            camMode = 0
            if(thumby.buttonA.pressed()):
                camMode = 1
            
            if(camMode == 1):
                if(thumby.buttonU.justPressed()):
                    cam = camto[cam][0]
                
                if(thumby.buttonL.justPressed()):
                    cam = camto[cam][1]
                
                if(thumby.buttonD.justPressed()):
                    cam = camto[cam][2]
                
                if(thumby.buttonR.justPressed()):
                    cam = camto[cam][3]
                
            else:
                if(thumby.buttonL.justPressed()):
                    cam -= 1
                    if(cam < 0):
                        cam = 10
                
                if(thumby.buttonR.justPressed()):
                    cam += 1
                    if(cam > 10):
                        cam = 0
        
        if(power < 0):
            leftDoorLit = 0
            rightDoorLit = 0
            leftDoorClosed = 0
            rightDoorClosed = 0
            camUp = 0
            hud = 0
        
        powerusage = (leftDoorLit|rightDoorLit)+(leftDoorClosed)+(rightDoorClosed)+(camUp>0)
        
        tpb = time.ticks_ms()
        tpc = (tpb-tpa)
        tpa = time.ticks_ms()
        tp += tpc*(powerusage+1)
        if(tp >= 8600):
            power -= 1
            tpb = tpa
            tp = 0
        
        #Draw
        thumby.display.fill(0)
        
        camstate = 0
        if((foxylocation == 3)&(camUp == 2)|(foxyframe > 0)):
            foxyframe += (cam == 3)
            if(foxyframe == 3):
                TFbitWav.loadFootSteps()
            if(foxyframe > 30):
                if(leftDoorClosed == 0):
                    jumpnum = 3
                    fail = 1
                if(foxyframe == 31):
                    TFbitWav.loadDoorBang()
                if(foxyframe>60):
                    foxylocation = 0
                    power -= 1+(5*foxydrain)
                    foxyframe = 0
                    foxydrain += 1
            if(foxyframe < 31):
                camstate = foxyframe
            else:
                camstate = 0
        
        if(camUp != 2):
            
            if(power < 0):
                if(freddylocation < 2):
                    spr_office.setFrame(1)
                    spr_office.x = -scrollx
                    thumby.display.drawSprite(spr_office)
                    thumby.display.drawSprite(spr_fan)
                    if(drawFreddy):
                        thumby.display.blit(bit_0,6-scrollx,12,8,8,-1,0,0)
            else:
                spr_office.setFrame(0)
                spr_office.x = -scrollx
                thumby.display.drawSprite(spr_office)
                spr_fan.setFrame((thumby.Sprite.getFrame(spr_fan))+1)
                thumby.display.drawSprite(spr_fan)
            
            spr_litDoorL.x = 5-scrollx
            spr_litDoorL.y = 1
            spr_lDoorClosed.x = 5-scrollx
            spr_lDoorClosed.y = 1
            spr_lDoorClosedw.x = 5-scrollx
            spr_lDoorClosedw.y = 1
            spr_rDoorClosed.x = 86-scrollx
            spr_rDoorClosed.y = 1
            spr_rDoorClosedw.x = 86-scrollx
            spr_rDoorClosedw.y = 1
            spr_litDoorR.x = 86-scrollx
            spr_litDoorR.y = 1
            spr_litWindowL.x = 16-scrollx
            spr_litWindowL.y = 8
            spr_litWindowR.x = 76-scrollx
            spr_litWindowR.y = 8
            
            spr_fan.x = 53-scrollx
            spr_fan.y = 14
            
            if(random.randint(0,5)>0)&(leftDoorLit == 1):
                if(bonnielocation == 6):
                    spr_litDoorL.setFrame(1)
                    spr_litWindowL.setFrame(1)
                    if(bstinger == 0):
                        TFbitWav.loadStinger()
                        bstinger = 1
                else:  
                    spr_litDoorL.setFrame(0)
                    spr_litWindowL.setFrame(0)
                thumby.display.drawSprite(spr_litDoorL)
                thumby.display.drawSprite(spr_litWindowL)
            if(random.randint(0,5)>0)&(rightDoorLit == 1):
                if(chicalocation == 6):
                    spr_litWindowR.setFrame(1)
                    if(cstinger == 0):
                        TFbitWav.loadStinger()
                        cstinger = 1
                else:
                    spr_litWindowR.setFrame(0)
                thumby.display.drawSprite(spr_litDoorR)
                thumby.display.drawSprite(spr_litWindowR)
            if(leftDoorClosed == 1):
                if(thumby.Sprite.getFrame(spr_lDoorClosed)<8):
                    spr_lDoorClosed.setFrame((thumby.Sprite.getFrame(spr_lDoorClosed))+1)
                    spr_lDoorClosedw.setFrame(thumby.Sprite.getFrame(spr_lDoorClosed))
                thumby.display.drawSprite(spr_lDoorClosed)
                thumby.display.drawSprite(spr_lDoorClosedw)
            elif(thumby.Sprite.getFrame(spr_lDoorClosed)>0):
                spr_lDoorClosed.setFrame((thumby.Sprite.getFrame(spr_lDoorClosed))-1)
                spr_lDoorClosedw.setFrame(thumby.Sprite.getFrame(spr_lDoorClosed))
                thumby.display.drawSprite(spr_lDoorClosed)
                thumby.display.drawSprite(spr_lDoorClosedw)
            if(rightDoorClosed == 1):
                if(thumby.Sprite.getFrame(spr_rDoorClosed)<8):
                    spr_rDoorClosed.setFrame((thumby.Sprite.getFrame(spr_rDoorClosed))+1)
                    spr_rDoorClosedw.setFrame(thumby.Sprite.getFrame(spr_rDoorClosed))
                thumby.display.drawSprite(spr_rDoorClosed)
                thumby.display.drawSprite(spr_rDoorClosedw)
            elif(thumby.Sprite.getFrame(spr_rDoorClosed)>0):
                spr_rDoorClosed.setFrame((thumby.Sprite.getFrame(spr_rDoorClosed))-1)
                spr_rDoorClosedw.setFrame(thumby.Sprite.getFrame(spr_rDoorClosed))
                thumby.display.drawSprite(spr_rDoorClosed)
                thumby.display.drawSprite(spr_rDoorClosedw)
            if(goldenappear == 1):
                # BITMAP: width: 25, height: 24
                bit_0 = bytearray([0,0,0,0,0,0,140,122,252,60,60,143,203,123,56,48,192,128,0,0,0,0,0,0,0,
                        0,0,0,0,0,0,48,253,255,143,255,83,0,8,0,72,131,7,12,12,128,0,0,0,0,
                        48,16,48,48,48,254,239,227,224,255,239,224,224,120,227,247,247,247,225,238,233,251,112,112,32])
                thumby.display.blit(bit_0,37-scrollx,16,25,24,0,0,0)
                # BITMAP: width: 25, height: 24
                bit_0 = bytearray([255,255,255,255,255,255,191,251,253,63,63,143,203,123,60,55,255,191,255,255,255,255,255,255,255,
                       255,255,255,255,255,253,124,253,255,143,255,83,0,8,0,72,131,7,15,15,151,255,255,255,255,
                       191,159,191,63,63,255,239,227,224,255,239,224,224,120,227,247,247,247,229,238,233,251,123,127,255])
                thumby.display.blit(bit_0,37-scrollx,16,25,24,1,0,0)
                if(random.randint(0,7)==0):
                    if(random.randint(0,3)==0):
                        rand = random.randint(0,3)
                        if(rand == 0):
                            # BITMAP: width: 72, height: 40
                            bit_0 = bytearray([127,241,227,231,207,207,207,111,111,63,15,3,3,0,192,224,255,255,255,255,131,193,225,97,97,97,113,49,49,115,115,243,255,255,255,255,255,255,255,255,255,243,115,115,51,49,49,113,97,97,225,193,227,255,255,255,255,255,255,250,224,1,7,60,113,103,79,207,207,231,227,127,
                               0,0,0,0,0,0,0,0,0,0,128,128,248,255,255,255,255,255,255,255,255,1,0,24,126,254,254,238,254,254,120,0,1,7,63,63,63,63,63,63,3,0,56,126,254,238,254,254,254,120,0,1,135,255,255,255,255,255,255,255,255,223,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,248,252,254,255,255,255,255,255,255,255,255,255,255,255,127,254,252,252,252,252,248,248,246,240,240,224,224,224,224,224,232,236,236,236,228,240,244,248,252,252,252,252,252,124,254,255,255,255,255,255,255,255,255,255,255,255,254,254,224,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,1,1,15,31,31,31,31,127,255,255,254,255,255,247,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,247,255,255,254,255,255,255,255,127,31,15,31,31,15,3,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,1,3,3,3,3,227,163,199,199,135,135,135,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,207,207,207,207,207,207,207,207,143,135,135,135,135,227,253,248,0,0,0,0,0,0,0,0,0,0,0,0])
                        if(rand == 1):
                            # BITMAP: width: 72, height: 40
                            bit_0 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,240,248,62,15,7,7,7,7,3,3,3,3,3,3,7,7,7,7,0,0,0,8,12,15,3,3,7,15,15,15,31,126,248,224,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,240,254,255,255,129,0,0,0,0,0,0,0,0,0,0,192,96,0,0,16,0,24,0,0,128,128,0,0,0,0,0,0,0,192,240,255,255,255,252,240,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,63,255,255,255,255,255,255,254,252,252,252,254,254,254,254,255,255,249,192,0,0,252,252,252,252,249,249,250,230,238,207,255,255,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,127,255,255,255,255,223,159,31,255,127,255,63,63,63,31,31,31,40,1,48,63,63,63,63,63,63,63,63,127,255,223,191,255,223,255,255,255,255,127,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,31,127,127,255,255,252,248,250,247,243,242,228,198,198,198,192,198,198,230,224,224,230,254,236,224,226,246,246,241,241,248,248,252,127,63,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
                        if(rand == 2):
                            # BITMAP: width: 72, height: 40
                            bit_0 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,224,240,248,252,254,127,127,63,127,127,63,15,6,6,30,127,127,63,15,63,63,63,126,126,252,248,240,224,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,248,254,255,255,63,15,7,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,31,127,255,255,254,248,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,255,255,255,255,255,224,128,0,0,0,3,3,0,0,128,192,224,248,248,240,224,128,128,0,0,3,3,0,0,192,224,255,255,255,255,255,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,31,255,255,255,255,255,255,255,255,127,222,254,31,31,15,15,15,15,7,7,15,15,15,15,206,220,2,62,255,255,255,255,255,255,255,31,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,128,195,199,207,207,143,15,31,28,63,255,254,252,124,60,56,48,16,24,24,56,124,252,255,63,2,0,1,7,135,231,231,227,192,0,128,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
                        if(rand == 3):
                            # BITMAP: width: 72, height: 40
                            bit_0 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,15,60,24,0,0,0,0,0,0,128,128,247,248,108,124,60,60,60,125,127,248,120,124,124,124,252,252,252,248,231,175,31,56,112,96,96,96,112,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,204,254,255,127,63,15,6,4,0,0,4,20,110,62,127,15,7,7,7,15,15,31,255,255,255,254,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,56,56,56,63,31,31,15,0,208,248,240,240,248,184,152,192,6,198,136,248,248,248,248,248,248,255,255,255,255,255,240,240,240,208,192,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,96,3,135,159,255,255,127,143,175,52,183,255,255,255,127,15,135,19,99,131,3,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,0,0,0,0,0,14,31,60,63,191,143,7,134,3,3,2,3,143,142,63,191,255,127,124,62,15,0,0,0,0,128,64,160,144,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
                        thumby.display.blit(bit_0,0,0,72,40,-1,0,0)
                    else:
                        thumby.display.fill(0)
                        thumby.display.drawText("ITS ME",random.randint(0,47),random.randint(0,35),1)
                    thumby.display.update()
                    thumby.display.update()
                    thumby.display.update()
            if(camUp == 1):
                freevar[0] == thumby.Sprite.getFrame(spr_camup)
                if(thumby.Sprite.getFrame(spr_camup)<6):
                    spr_camup.setFrame((thumby.Sprite.getFrame(spr_camup))+1)
                    spr_camupw.setFrame(thumby.Sprite.getFrame(spr_camup)+7)
                thumby.display.drawSprite(spr_camup)
                thumby.display.drawSprite(spr_camupw)
                if(thumby.Sprite.getFrame(spr_camup) == 6):
                    camUp = 2
            elif(thumby.Sprite.getFrame(spr_camup)>0):
                spr_camup.setFrame((thumby.Sprite.getFrame(spr_camup))-1)
                spr_camupw.setFrame(thumby.Sprite.getFrame(spr_camup)+7)
                thumby.display.drawSprite(spr_camup)
                thumby.display.drawSprite(spr_camupw)
        else:
            if(goldenappear == 1):
                goldenappear = 2
                if((fail == 1)&(jumpnum == 5)):
                    fail = 0
            TFcameras.getcamera(cam,camstate,freddylocation,bonnielocation,chicalocation,foxylocation)
            TFcameras.static(frame)
            TFcameras.camMap(cam,camMode)
        
        #GUI
        thumby.display.drawFilledRectangle(53,0,20,hudy,0)
        thumby.display.drawFilledRectangle(0,0,12,hudy,0)
        ampre = am
        am = math.floor(t0/70000)
        if(ampre != am):
            if(night == 1):
                if(am == 1):
                    freddydifficulty = 0
                    bonniedifficulty = 0
                    chicadifficulty = 0
                    foxydifficulty = 0
                if(am == 2):
                    freddydifficulty = 0
                    bonniedifficulty = 1
                    chicadifficulty = 0
                    foxydifficulty = 0
                if(am == 3):
                    freddydifficulty = 0
                    bonniedifficulty = 2
                    chicadifficulty = 1
                    foxydifficulty = 1
                if(am == 4):
                    freddydifficulty = 0
                    bonniedifficulty = 3
                    chicadifficulty = 2
                    foxydifficulty = 2
                if(am == 5):
                    freddydifficulty = 0
                    bonniedifficulty = 3
                    chicadifficulty = 2
                    foxydifficulty = 2
            if(night == 2):
                if(am == 1):
                    freddydifficulty = 0
                    bonniedifficulty = 3
                    chicadifficulty = 1
                    foxydifficulty = 1
                if(am == 2):
                    freddydifficulty = 0
                    bonniedifficulty = 4
                    chicadifficulty = 1
                    foxydifficulty = 1
                if(am == 3):
                    freddydifficulty = 0
                    bonniedifficulty = 5
                    chicadifficulty = 2
                    foxydifficulty = 2
                if(am == 4):
                    freddydifficulty = 0
                    bonniedifficulty = 6
                    chicadifficulty = 3
                    foxydifficulty = 3
                if(am == 5):
                    freddydifficulty = 0
                    bonniedifficulty = 6
                    chicadifficulty = 3
                    foxydifficulty = 3
            if(night == 3):
                if(am == 1):
                    freddydifficulty = 0
                    bonniedifficulty = 0
                    chicadifficulty = 5
                    foxydifficulty = 2
                if(am == 2):
                    freddydifficulty = 1
                    bonniedifficulty = 1
                    chicadifficulty = 5
                    foxydifficulty = 2
                if(am == 3):
                    freddydifficulty = 1
                    bonniedifficulty = 2
                    chicadifficulty = 6
                    foxydifficulty = 3
                if(am == 4):
                    freddydifficulty = 1
                    bonniedifficulty = 3
                    chicadifficulty = 7
                    foxydifficulty = 4
                if(am == 5):
                    freddydifficulty = 2
                    bonniedifficulty = 3
                    chicadifficulty = 7
                    foxydifficulty = 4
            if(night == 4):
                if(am == 1):
                    freddydifficulty = 1
                    bonniedifficulty = 2
                    chicadifficulty = 4
                    foxydifficulty = 6
                if(am == 2):
                    freddydifficulty = random.randint(1,2)
                    bonniedifficulty = 3
                    chicadifficulty = 5
                    foxydifficulty = 6
                if(am == 3):
                    freddydifficulty = 2
                    bonniedifficulty = 4
                    chicadifficulty = 6
                    foxydifficulty = 7
                if(am == 4):
                    freddydifficulty = 2
                    bonniedifficulty = 5
                    chicadifficulty = 6
                    foxydifficulty = 8
                if(am == 5):
                    freddydifficulty = random.randint(2,3)
                    bonniedifficulty = 5
                    chicadifficulty = 6
                    foxydifficulty = 8
            if(night == 5):
                if(am == 1):
                    freddydifficulty = 2
                    bonniedifficulty = 5
                    chicadifficulty = 7
                    foxydifficulty = 5
                if(am == 2):
                    freddydifficulty = 3
                    bonniedifficulty = 6
                    chicadifficulty = 7
                    foxydifficulty = 5
                if(am == 3):
                    freddydifficulty = 3
                    bonniedifficulty = 7
                    chicadifficulty = 8
                    foxydifficulty = 6
                if(am == 4):
                    freddydifficulty = 4
                    bonniedifficulty = 8
                    chicadifficulty = 9
                    foxydifficulty = 7
                if(am == 5):
                    freddydifficulty = 4
                    bonniedifficulty = 8
                    chicadifficulty = 9
                    foxydifficulty = 7
            if(night == 6):
                if(am == 1):
                    freddydifficulty = 4
                    bonniedifficulty = 10
                    chicadifficulty = 12
                    foxydifficulty = 16
                if(am == 2):
                    freddydifficulty = 5
                    bonniedifficulty = 11
                    chicadifficulty = 12
                    foxydifficulty = 16
                if(am == 3):
                    freddydifficulty = 5
                    bonniedifficulty = 12
                    chicadifficulty = 13
                    foxydifficulty = 17
                if(am == 4):
                    freddydifficulty = 6
                    bonniedifficulty = 13
                    chicadifficulty = 14
                    foxydifficulty = 18
                if(am == 5):
                    freddydifficulty = 6
                    bonniedifficulty = 13
                    chicadifficulty = 14
                    foxydifficulty = 18
            if(night == 7):
                if(random.randint(0,15) == 0):
                    freddydifficulty += (freddydifficulty<20)
                if(random.randint(0,15) == 0):
                    bonniedifficulty += (bonniedifficulty<20)
                if(random.randint(0,15) == 0):
                    chicadifficulty += (chicadifficulty<20)
                if(random.randint(0,15) == 0):
                    foxydifficulty += (foxydifficulty<20)
                
        #am = 6
        if(hud == 1)|(hudy > 0):
            if(power>9):
                thumby.display.drawText(str(power)+"%",0,-6+hudy,1)
            else:
                if(power>-1):
                    thumby.display.drawText("0"+str(power)+"%",0,-6+hudy,1)
                else:
                    thumby.display.drawText("00%",0,-6+hudy,1)
            if(am == 0):
                thumby.display.drawText("12:AM",53,-6+hudy,1)
            else:
                thumby.display.drawText(str(am)+":AM",57,-6+hudy,1)
            thumby.display.drawLine(0,hudy,8,hudy,0)
            for freevar[0] in range(0,(powerusage*2)+1,2):
                thumby.display.setPixel(freevar[0],hudy,1)
        
        #spr_jumpscare.setFrame((thumby.Sprite.getFrame(spr_jumpscare))+1)
        #thumby.display.drawSprite(spr_jumpscare)
        
        frame += 1
        frame % 30030
        
        TFbitWav.soundupdate()
        
        thumby.display.update()
        
    if(fail == 1):
        if(jumpnum == 4):
            done = 41
        else:
            done = 56
        frame = 0
        framestart = [0,10,25,53,73,0]
        framelimit = [9,15,27,20,21,0]
        spr_jumpscare = thumby.Sprite(72,40,"/Games/TinyFreddy/Jumpscares.bin",0,0)
        if(jumpnum == 5):
            TFbitWav.loadGoldenJumpScare()
        else:
            TFbitWav.loadJumpScare()
        while(done > 0):
            done -= 1
            t0b = time.ticks_ms()
            t0 = t0b-t0a
            am = math.floor(t0/70000)
            if(am == 6):
                done = 0
            
            frame += 0.5
            if(frame > framelimit[jumpnum]):
                if(jumpnum == 3):
                    frame -= 0.5
                else:
                    frame = 0
            thumby.display.fill(0)
            if(jumpnum == 5):
                # BITMAP: width: 72, height: 40
                bit_0 = bytearray([127,251,247,231,239,207,239,111,127,63,15,0,80,248,232,248,255,255,255,223,3,1,1,1,1,1,17,17,17,17,51,59,127,255,255,255,255,255,255,255,255,123,51,51,17,17,17,49,49,33,97,225,243,255,255,255,255,255,248,248,224,193,7,62,123,119,239,239,239,231,247,127,
                   0,0,0,0,0,0,0,0,0,0,192,240,252,255,255,255,255,255,247,226,128,0,0,0,0,0,0,0,0,0,0,0,0,0,3,63,63,63,31,1,0,0,0,0,0,0,0,0,0,0,0,0,131,255,255,255,255,255,255,255,255,255,192,0,0,0,0,0,0,0,0,0,
                   0,0,0,0,0,0,0,252,255,255,255,255,255,255,255,255,255,255,255,255,255,254,252,248,248,248,248,248,248,240,240,240,240,240,224,224,224,236,236,236,244,244,240,240,248,248,248,248,248,248,252,254,255,255,255,255,255,255,255,255,255,255,255,255,254,248,192,0,0,0,0,0,
                   0,0,0,0,0,0,0,1,5,15,31,31,31,63,255,255,255,255,251,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,191,127,31,31,15,3,0,0,0,0,0,0,
                   0,0,0,0,0,0,0,0,0,0,0,0,0,254,254,129,3,7,7,3,3,3,3,3,7,7,7,7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,7,15,15,15,31,31,15,215,251,255,254,192,0,0,0,0,0,0,0,0,0,0,0])
                thumby.display.blit(bit_0,0,0,72,40,-1,0,0)
            else:
                spr_jumpscare.setFrame(round(frame+framestart[jumpnum]))
                thumby.display.drawSprite(spr_jumpscare)
            thumby.display.update()
            TFbitWav.soundupdate()
        if(am != 6):
            fail = 2
        TFbitWav.stopsound()
        TFbitWav.soundupdate()
    
    spr_jumpscare = 0
    
    if(am == 6):
        done = 600
        thumby.display.setFont("/lib/font8x8.bin", 8, 8, 1)
        while(done > 0):
            done -= 1
            thumby.display.fill(0)
            if(done > 420):
                thumby.display.drawText("5:AM",18,16,1)
                thumby.display.update()
            elif(done > 300):
                thumby.display.drawText("5",18,16-int((done-420)/2),1)
                thumby.display.drawText("6",18,16-int((done-300)/2),1)
                thumby.display.drawText(":AM",27,16,1)
                thumby.display.update()
            else:
                thumby.display.drawText("6:AM",18,16,1)
                thumby.display.update()
                
            thumby.display.update()
    
    if(fail == 2):
        done = 300
        thumby.display.setFont("/lib/font3x5.bin", 3, 5, 1)
        
        # BITMAP: width: 72, height: 40
        bit_0 = bytearray([0,0,0,0,0,0,0,0,192,32,32,160,103,157,193,231,222,192,207,255,216,208,240,208,16,240,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,0,0,128,128,224,224,192,192,0,128,128,128,128,0,16,16,50,48,52,128,224,64,252,64,64,208,240,2,0,224,134,
            0,0,0,0,0,0,0,0,3,0,1,1,255,213,5,223,255,11,234,255,255,255,63,63,255,223,0,0,0,0,0,0,0,0,0,0,32,0,8,0,9,5,2,1,3,3,0,6,0,1,255,255,255,255,255,0,252,127,129,254,143,252,15,135,36,143,231,0,27,71,28,7,
            0,0,0,0,0,0,0,0,192,236,6,3,3,1,9,31,159,156,157,29,12,206,70,7,25,8,2,118,0,11,23,2,0,0,57,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,1,1,64,128,128,224,31,129,29,1,128,1,240,157,28,128,0,248,14,193,
            0,0,0,0,64,32,120,14,3,1,0,0,0,0,7,15,31,63,31,63,31,7,0,0,0,1,191,252,232,0,0,6,3,197,116,0,200,56,48,48,216,216,216,96,100,100,208,144,192,224,240,248,248,184,253,47,0,0,8,1,0,0,193,222,239,7,224,6,0,1,40,3,
            0,0,0,0,0,0,192,240,240,16,0,0,0,0,128,192,192,224,192,0,0,32,32,6,7,199,193,199,7,3,2,2,31,28,28,12,3,3,7,7,5,5,5,7,7,7,7,1,1,3,7,7,6,7,3,0,0,0,0,0,0,0,0,1,1,0,3,0,0,0,0,0])
        
        while(done > 0):
            done -= 1
            thumby.display.fill(0)
            thumby.display.blit(bit_0,0,0,72,40,-1,0,0)
            thumby.display.drawText("Game Over",38,35,1)
            thumby.display.update()
    
    if((fail == 2)|(night > 4)):
        if(fail == 0):
            thumby.buttonA.justPressed()
            thumby.display.setFont("/lib/font3x5.bin", 3, 5, 1)
            # BITMAP: width: 72, height: 40
            bit_0 = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,240,240,240,118,2,224,240,240,116,252,236,252,252,252,252,254,255,255,254,255,255,255,255,126,63,191,126,126,190,190,142,182,134,142,190,190,124,188,60,60,124,248,248,240,240,240,224,192,192,192,192,192,224,192,192,224,192,128,128,128,
            240,248,252,252,254,254,254,254,252,248,6,254,127,254,254,255,254,214,254,252,208,200,225,31,255,255,255,251,243,243,255,255,247,247,240,179,71,231,233,232,233,239,253,233,253,255,127,255,253,251,7,255,248,127,127,63,207,247,187,125,254,254,189,123,251,247,239,31,255,255,255,255,
            119,127,127,63,63,223,239,247,247,251,200,27,247,254,254,255,254,254,252,252,254,238,237,242,239,239,223,223,111,111,247,247,251,241,189,235,243,180,142,78,172,172,220,222,206,206,166,191,127,120,183,235,251,248,251,248,247,15,254,235,215,215,214,235,255,255,247,232,115,227,225,224,
            7,7,7,3,0,34,39,63,63,63,191,187,255,255,239,223,255,255,255,255,255,255,7,3,253,248,241,243,224,243,247,255,255,255,255,255,255,255,255,224,223,223,223,223,223,223,223,239,231,195,207,143,239,79,111,111,246,248,255,255,255,255,255,255,255,255,255,95,1,1,21,28,
            0,0,2,0,0,0,0,0,0,192,252,255,255,239,255,255,253,156,222,238,230,226,224,224,241,241,241,255,31,31,31,31,31,223,225,241,241,241,247,255,255,239,239,223,223,253,189,221,255,255,255,255,247,224,0,251,255,255,255,255,255,223,126,254,254,255,255,255,255,0,0,24])
            TFbitWav.loadToreador()
            y = 0
            yscroll = 0
            while(done == 0):
                if(thumby.buttonA.justPressed()):
                    if(yscroll != 40):
                        y = 40
                    else:
                        done = 1
                if(y>yscroll):
                    yscroll += 1
                thumby.display.fill(0)
                if(night == 5):
                    thumby.display.drawText("Good job, sport!",4,0-yscroll,1)
                    thumby.display.drawText("See you next week",2,6-yscroll,1)
                    thumby.display.drawText("Payment: 120$",10,19-yscroll,1)
                if(night == 6):
                    thumby.display.drawText("Good job, sport!",4,0-yscroll,1)
                    thumby.display.drawText("You've earned some",0,6-yscroll,1)
                    thumby.display.drawText("overtime!",0,12-yscroll,1)
                    thumby.display.drawText("Payment: 120$+30c",3,19-yscroll,1)
                if(night == 7):
                    thumby.display.drawText("Notice:Termination",0,0-yscroll,1)
                    thumby.display.drawText("You're fired!",6,7-yscroll,1)
                    thumby.display.drawText("Reason: tampering",2,15-yscroll,1)
                    thumby.display.drawText("with things, odor",2,21-yscroll,1)
                thumby.display.blit(bit_0,0,40-yscroll,72,40,-1,0,0)
                thumby.display.drawFilledRectangle(44, 74-yscroll, 30, 6, 0)
                thumby.display.drawText("THE END",45,75-yscroll,1)
                thumby.display.update()
                TFbitWav.soundupdate()
        
        return "title0"
    else:
        night += 1
        return "game"
    
while(gamestate != "exit"):
    if(gamestate == "game"):
        gamestate = game()
    elif(gamestate == "title0"):
        gamestate = title(0)
    elif(gamestate == "title1"):
        gamestate = title(1)
